// This file contains list of items

//------------------------------------------------------------------------------
// WEAPONS
//------------------------------------------------------------------------------
weapon dagger_knife {
	weight 0.2
	value 2
	mesh "knife.qmsh"
	attack 5
	req_str 15
	type short_blade
	material metal
	dmg_type pierce
}

weapon dagger_short {
	weight 0.6
	value 10
	mesh "sztylet.qmsh"
	attack 15
	req_str 20
	type short_blade
	material metal
	dmg_type pierce
}

weapon dagger_sword {
	weight 0.9
	value 100
	mesh "short_sword.qmsh"
	attack 45
	req_str 25
	type short_blade
	material metal
	dmg_type pierce
}

weapon dagger_rapier {
	weight 0.9
	value 250
	mesh "rapier.qmsh"
	attack 65
	req_str 22
	type short_blade
	material metal
	dmg_type pierce
}

weapon dagger_cutlass {
	weight 1
	value 1000
	mesh "cutlass.qmsh"
	attack 90
	req_str 30
	type short_blade
	material metal
	dmg_type {pierce slash}
	flags hq
}

weapon dagger_assassin {
	weight 0.6
	value 3000
	mesh "sztylet_zabojcy.qmsh"
	attack 120
	req_str 20
	type short_blade
	material metal
	dmg_type pierce
	flags hq
	effects {
		on_attack backstab 0.1
	}
}

weapon dagger_sword_a {
	weight 1
	value 7500
	mesh "adam_kmiecz.qmsh"
	attack 150
	req_str 26
	type short_blade
	material metal
	dmg_type pierce
	flags magical
}

weapon dagger_spinesheath {
	weight 0.5
	value 25000
	mesh "grzbietokluj.qmsh"
	attack 180
	req_str 20
	type short_blade
	material metal
	dmg_type pierce
	flags {not_shop not_random unique}
	effects {
		on_attack backstab 0.25
	}
}

weapon sword_wooden {
	weight 1
	value 2
	mesh "sword_wood.qmsh"
	attack 10
	req_str 30
	type long_blade
	material wood
	dmg_type blunt
}

weapon sword_long {
	weight 1.8
	value 20
	mesh "sword.qmsh"
	attack 20
	req_str 40
	type long_blade
	material metal
	dmg_type slash
}

weapon sword_scimitar {
	weight 1.8
	value 100
	mesh "sejmitar.qmsh"
	attack 35
	req_str 50
	type long_blade
	material metal
	dmg_type slash
}

weapon sword_orcish {
	weight 2.2
	value 200
	mesh "orc_sword.qmsh"
	attack 70
	req_str 55
	type long_blade
	material metal
	dmg_type slash
}

weapon sword_serrated {
	weight 2
	value 1200
	mesh "zabkowany_miecz.qmsh"
	attack 100
	req_str 45
	type long_blade
	material metal
	dmg_type slash
	flags hq
}

weapon sword_mercenary {
	weight 2.5
	value 3000
	mesh "naraphim_sword.qmsh"
	attack 130
	req_str 50
	type long_blade
	material metal
	dmg_type slash
	flags hq
}

weapon sword_adamantine {
	weight 2
	value 7500
	mesh "adam_miecz.qmsh"
	attack 160
	req_str 50
	type long_blade
	material metal
	dmg_type slash
	flags magical
}

weapon sword_semur {
	weight 1.8
	value 30000
	ai_value 500
	mesh "semur.qmsh"
	attack 200
	req_str 45
	type long_blade
	material metal
	dmg_type slash
	flags {not_shop not_random mage unique}
	effects {
		magic_power 15
	}
}

weapon sword_forbidden {
	weight 2
	value 500000
	mesh "sny.qmsh"
	attack 250
	req_str 45
	type long_blade
	material crystal
	dmg_type {slash pierce blunt}
	flags {not_shop not_random unique}
	effects {
		magic_power 10
	}
}

weapon axe_rusted {
	weight 1.2
	value 10
	mesh "axe_rusted.qmsh"
	attack 15
	req_str 40
	type axe
	material metal
	dmg_type slash
}

weapon axe_small {
	weight 1.3
	value 15
	mesh "hatchet.qmsh"
	attack 25
	req_str 45
	type axe
	material metal
	dmg_type slash
}

weapon axe_battle {
	weight 2.7
	value 80
	mesh "battle_axe.qmsh"
	attack 55
	req_str 55
	type axe
	material metal
	dmg_type slash
}

weapon axe_orcish {
	weight 3
	value 220
	mesh "orc_axe.qmsh"
	attack 75
	req_str 65
	type axe
	material metal
	dmg_type slash
}

weapon axe_crystal {
	weight 3.5
	value 1500
	mesh "crystal_axe.qmsh"
	attack 105
	req_str 60
	type axe
	material crystal
	dmg_type slash
	flags hq
}

weapon axe_dwarf {
	weight 2.8
	value 4000
	mesh "axe_dwarf.qmsh"
	attack 135
	req_str 55
	type axe
	material metal
	dmg_type slash
	flags hq
}

weapon axe_giant {
	weight 3.5
	value 9000
	mesh "giant_axe.qmsh"
	attack 165
	req_str 70
	type axe
	material metal
	dmg_type slash
	flags magical
}

weapon axe_ripper {
	weight 3.5
	value 40000
	mesh "rozpruwacz.qmsh"
	attack 210
	req_str 75
	type axe
	material metal
	dmg_type {slash pierce}
	flags {not_shop not_random unique}
}

weapon blunt_club {
	weight 1.3
	value 2
	mesh "maczuga.qmsh"
	attack 15
	req_str 40
	type blunt
	material wood
	dmg_type blunt
}

weapon blunt_mace {
	weight 3.6
	value 12
	mesh "buzdygan.qmsh"
	attack 25
	req_str 50
	type blunt
	material metal
	dmg_type blunt
}

weapon blunt_orcish {
	weight 4
	value 75
	mesh "orc_hammer.qmsh"
	attack 60
	req_str 60
	type blunt
	material rock
	dmg_type blunt
}

weapon blunt_orcish_shaman {
	weight 2
	value 50
	ai_value 150
	mesh "ozdobny_orkowy_mlot.qmsh"
	attack 30
	req_str 40
	type blunt
	material rock
	dmg_type blunt
	flags {not_shop mage}
	effects {
		magic_power 2
	}
}

weapon blunt_barbed {
	weight 2
	value 180
	mesh "barbed_cudgel.qmsh"
	attack 80
	req_str 50
	type blunt
	material metal
	dmg_type {blunt pierce}
}

weapon blunt_morningstar {
	weight 2.7
	value 800
	mesh "morgensztern.qmsh"
	attack 110
	req_str 55
	type blunt
	material metal
	dmg_type {blunt pierce}
	flags hq
}

weapon blunt_dwarven {
	weight 4.4
	value 2500
	mesh "krasnoludzki_mlot.qmsh"
	attack 140
	req_str 60
	type blunt
	material metal
	dmg_type blunt
	flags hq
}

weapon blunt_ogre {
	weight 20
	value 150
	mesh "ogre_club.qmsh"
	attack 160
	req_str 120
	type blunt
	material wood
	dmg_type {blunt pierce}
	flags not_shop
}

weapon blunt_adamantine {
	weight 4
	value 6000
	mesh "adam_buzdygan.qmsh"
	attack 170
	req_str 60
	type blunt
	material metal
	dmg_type blunt
	flags magical
}

weapon blunt_skullsmasher {
	weight 5
	value 20000
	mesh "rozlupywacz.qmsh"
	attack 220
	req_str 70
	type blunt
	material metal
	dmg_type {blunt pierce}
	flags {not_shop not_random unique}
}

weapon blacksmith_hammer {
	weight 3
	value 40
	mesh "mlot_kowala.qmsh"
	attack 50
	req_str 50
	type blunt
	material metal
	dmg_type blunt
}

weapon pickaxe {
	weight 2.5
	value 30
	mesh "kilof.qmsh"
	attack 50
	req_str 55
	type blunt
	material metal
	dmg_type blunt
}

weapon frying_pan {
	weight 1.5
	value 25
	mesh "frying_pan.qmsh"
	attack 35
	req_str 25
	type blunt
	material metal
	dmg_type blunt
}

weapon wand_novice {
	weight 0.6
	value 75
	ai_value 100
	mesh "wand1.qmsh"
	attack 10
	req_str 15
	type blunt
	material wood
	dmg_type blunt
	flags {not_shop mage magical wand}
	effects {
		magic_power 1
	}
}

weapon wand_adept {
	weight 0.6
	value 200
	ai_value 200
	mesh "wand2.qmsh"
	attack 25
	req_str 15
	type blunt
	material wood
	dmg_type blunt
	flags {not_shop mage magical wand}
	effects {
		magic_power 4
	}
}

weapon wand_expert {
	weight 0.6
	value 1250
	ai_value 300
	mesh "wand3.qmsh"
	attack 50
	req_str 15
	type blunt
	material wood
	dmg_type blunt
	flags {not_shop mage magical wand}
	effects {
		magic_power 8
	}
}

weapon wand_master {
	weight 0.6
	value 6500
	ai_value 400
	mesh "wand4.qmsh"
	attack 75
	req_str 15
	type blunt
	material wood
	dmg_type blunt
	flags {not_shop mage magical wand}
	effects {
		magic_power 12
	}
}

//------------------------------------------------------------------------------
// BOWS
//------------------------------------------------------------------------------
bow bow_short {
	weight 0.9
	value 30
	mesh "luk_krotki.qmsh"
	attack 15
	speed 40
	req_str 25
}

bow bow_long {
	weight 1.3
	value 75
	mesh "luk_dlugi.qmsh"
	attack 45
	speed 45
	req_str 35
}

bow bow_composite {
	weight 1.3
	value 500
	mesh "luk_kompozytowy.qmsh"
	attack 85
	speed 45
	req_str 40
}

bow bow_elven {
	weight 1.1
	value 3000
	mesh "luk_elfi.qmsh"
	attack 125
	req_str 35
	speed 50
	flags hq
}

bow bow_dragonbone {
	weight 1.5
	value 8000
	mesh "luk_smoczy.qmsh"
	attack 170
	req_str 50
	speed 50
	flags magical
}

bow bow_angel {
	weight 0.9
	value 30000
	mesh "luk_anielski.qmsh"
	attack 220
	req_str 25
	speed 60
	flags {not_shop not_random unique}
	effects {
		magic_power 4
	}
}

bow q_gobliny_luk {
	weight 1.3
	value 100
	mesh "luk_stary.qmsh"
	attack 40
	req_str 45
	speed 45
	flags {not_shop not_random dont_drop important}
}

//------------------------------------------------------------------------------
// SHIELDS
//------------------------------------------------------------------------------
shield shield_plank {
	weight 1.5
	value 5
	mesh "shield_plank.qmsh"
	block 10
	req_str 25
	material wood
}

shield shield_wood {
	weight 2
	value 25
	mesh "drewniana_tarcza.qmsh"
	block 30
	req_str 30
	material wood
}

shield shield_kite {
	weight 3
	value 100
	mesh "kite_shield.qmsh"
	block 50
	req_str 40
	material wood
}

shield shield_iron {
	weight 2.5
	value 250
	mesh "iron_shield.qmsh"
	block 70
	req_str 35
	material metal
}

shield shield_steel {
	weight 4
	value 1000
	mesh "kite_shield_steel.qmsh"
	block 100
	req_str 50
	material metal
}

shield shield_mithril {
	weight 1.2
	value 3000
	mesh "mith_shield.qmsh"
	block 130
	req_str 20
	material metal
	flags hq
}

shield shield_spiked {
	weight 5
	value 4000
	mesh "spiked_shield.qmsh"
	block 140
	attack_mod 1
	req_str 60
	material metal
	flags hq
}

shield shield_adamantine {
	weight 4.5
	value 7500
	mesh "adam_shield.qmsh"
	block 160
	req_str 55
	material metal
	flags magical
	effects {
		magic_resistance 0.1
	}
}

shield shield_wall {
	weight 10
	value 25000
	mesh "shield_wall.qmsh"
	block 200
	attack_mod 0.6
	req_str 75
	material rock
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.25
	}
}

shield shield_death {
	weight 4.5
	value 25000
	mesh "shield_death.qmsh"
	block 200
	attack_mod 0.6
	req_str 55
	material rock
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.25
	}
}

//------------------------------------------------------------------------------
// ARMORS
//------------------------------------------------------------------------------
armor al_padded {
	weight 4.5
	value 10
	mesh "padded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 5
	req_str 25
	mobility 90
}

armor al_padded_hq {
	weight 4.5
	value 20
	mesh "padded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 15
	req_str 25
	mobility 95
	flags hq
}

armor al_padded_m {
	weight 4
	value 75
	mesh "padded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 35
	req_str 25
	mobility 95
	flags magical
}

armor al_leather {
	weight 7
	value 15
	mesh "leather_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 15
	req_str 30
	mobility 85
}

armor al_leather_hq {
	weight 7
	value 30
	mesh "leather_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 25
	req_str 30
	mobility 90
	flags hq
}

armor al_leather_m {
	weight 6
	value 120
	mesh "leather_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 45
	req_str 30
	mobility 90
	flags magical
}

armor al_dragonskin {
	weight 8
	value 15000
	mesh "dragonskin.qmsh"
	type light
	unit_type human
	material skin
	defense 165
	req_str 35
	mobility 80
	flags magical
	effects {
		magic_resistance 0.1
	}
}

armor al_studded {
	weight 9
	value 100
	mesh "studded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 40
	req_str 35
	mobility 80
}

armor al_studded_hq {
	weight 9
	value 150
	mesh "studded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 50
	req_str 35
	mobility 85
	flags hq
}

armor al_studded_m {
	weight 8
	value 500
	mesh "studded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 70
	req_str 35
	mobility 85
	flags magical
}

armor al_shadow {
	weight 7
	value 12000
	mesh "studded_armor.qmsh"
	type light
	unit_type human
	material skin
	defense 100
	req_str 30
	mobility 85
	flags {not_shop not_random unique}
	effects {
		backstab 0.1
	}
}

armor al_chain_shirt {
	weight 11.5
	value 1000
	mesh "chain_shirt.qmsh"
	type light
	unit_type human
	material metal
	defense 90
	req_str 40
	mobility 75
}

armor al_chain_shirt_hq {
	weight 11.5
	value 1500
	mesh "chain_shirt.qmsh"
	type light
	unit_type human
	material metal
	defense 100
	req_str 40
	mobility 80
	flags hq
}

armor al_chain_shirt_m {
	weight 10
	value 3000
	mesh "chain_shirt.qmsh"
	type light
	unit_type human
	material metal
	defense 120
	req_str 40
	mobility 80
	flags magical
}

armor al_chain_shirt_mith {
	weight 5.5
	value 5000
	mesh "chain_shirt.qmsh"
	tex_override "chain_shirt_mith.jpg"
	type light
	unit_type human
	material metal
	defense 135
	req_str 30
	mobility 90
	flags magical
}

armor al_angelskin {
	weight 3
	value 25000
	mesh "angelskin.qmsh"
	type light
	unit_type human
	material metal
	defense 180
	req_str 20
	mobility 100
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.25
		regeneration 5
	}
}

armor am_hide {
	weight 11.5
	value 10
	mesh "hide_armor.qmsh"
	type medium
	unit_type human
	material skin
	defense 10
	req_str 40
	mobility 75
}

armor am_hide_hq {
	weight 11.5
	value 15
	mesh "hide_armor.qmsh"
	type medium
	unit_type human
	material skin
	defense 20
	req_str 40
	mobility 80
	flags hq
}

armor am_hide_m {
	weight 10
	value 50
	mesh "hide_armor.qmsh"
	type medium
	unit_type human
	material skin
	defense 40
	req_str 40
	mobility 80
	flags magical
}

armor am_troll_hide {
	weight 12.5
	value 2000
	mesh "hide_armor.qmsh"
	tex_override "troll_hide_armor.jpg"
	type medium
	unit_type human
	material skin
	defense 60
	req_str 45
	mobility 75
	flags magical
	effects {
		regeneration 5
	}
}

armor am_chainmail {
	weight 18
	value 50
	mesh "chainmail.qmsh"
	type medium
	unit_type human
	material metal
	defense 20
	req_str 50
	mobility 60
}

armor am_chainmail_hq {
	weight 18
	value 150
	mesh "chainmail.qmsh"
	type medium
	unit_type human
	material metal
	defense 30
	req_str 50
	mobility 65
	flags hq
}

armor am_chainmail_m {
	weight 16
	value 250
	mesh "chainmail.qmsh"
	type medium
	unit_type human
	material metal
	defense 50
	req_str 50
	mobility 65
	flags magical
}

armor am_chainmail_mith {
	weight 9
	value 250
	mesh "chainmail.qmsh"
	tex_override "chainmail_mith.jpg"
	type medium
	unit_type human
	material metal
	defense 70
	req_str 35
	mobility 75
	flags magical
}

armor am_scale {
	weight 15
	value 100
	mesh "scale_armor.qmsh"
	type medium
	unit_type human
	material metal
	defense 50
	req_str 50
	mobility 60
}

armor am_scale_hq {
	weight 15
	value 250
	mesh "scale_armor.qmsh"
	type medium
	unit_type human
	material metal
	defense 60
	req_str 50
	mobility 65
	flags hq
}

armor am_scale_m {
	weight 13.5
	value 500
	mesh "scale_armor.qmsh"
	type medium
	unit_type human
	material metal
	defense 80
	req_str 45
	mobility 65
	flags magical
}

armor am_dragonscale {
	weight 16.5
	value 15000
	mesh "scale_armor.qmsh"
	tex_override "dragonscale.jpg"
	type medium
	unit_type human
	material metal
	defense 180
	req_str 50
	mobility 55
	flags magical
	effects {
		magic_resistance 0.1
	}
}

armor am_breastplate {
	weight 13.5
	value 1000
	mesh "breastplate.qmsh"
	type medium
	unit_type human
	material metal
	defense 100
	req_str 45
	mobility 70
}

armor am_breastplate_hq {
	weight 13.5
	value 1500
	mesh "breastplate.qmsh"
	type medium
	unit_type human
	material metal
	defense 110
	req_str 45
	mobility 75
	flags hq
}

armor am_breastplate_m {
	weight 12
	value 3000
	mesh "breastplate.qmsh"
	type medium
	unit_type human
	material metal
	defense 130
	req_str 40
	mobility 75
	flags magical
}

armor am_breastplate_mith {
	weight 6.5
	value 5000
	mesh "breastplate.qmsh"
	tex_override "breastplate_mith.jpg"
	type medium
	unit_type human
	material metal
	defense 150
	req_str 30
	mobility 85
	flags magical
}

armor am_breastplate_adam {
	weight 16
	value 10000
	mesh "breastplate.qmsh"
	tex_override "breastplate_adam.jpg"
	type medium
	unit_type human
	material metal
	defense 170
	req_str 50
	mobility 70
	flags magical
	effects {
		magic_resistance 0.1
	}
}

armor am_gladiator {
	weight 13.5
	value 25000
	mesh "gladiator_armor.qmsh"
	type medium
	unit_type human
	material metal
	defense 200
	req_str 45
	mobility 75
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.1
		melee_attack 25
	}
}

armor ah_splint_rusted {
	weight 18
	value 75
	mesh "splint_armor.qmsh"
	tex_override "splint_armor_rusted.jpg"
	type heavy
	unit_type human
	material metal
	defense 25
	req_str 50
	mobility 50
}

armor ah_splint {
	weight 18
	value 150
	mesh "splint_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 55
	req_str 50
	mobility 50
}

armor ah_splint_hq {
	weight 18
	value 225
	mesh "splint_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 65
	req_str 50
	mobility 55
	flags hq
}

armor ah_splint_m {
	weight 16
	value 600
	mesh "splint_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 85
	req_str 50
	mobility 55
	flags magical
}

armor ah_splint_mith {
	weight 9
	value 1200
	mesh "splint_armor.qmsh"
	tex_override "splint_armor_mith.jpg"
	type heavy
	unit_type human
	material metal
	defense 110
	req_str 35
	mobility 65
	flags magical
}

armor ah_antimage {
	weight 20
	value 18000
	mesh "splint_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 130
	req_str 55
	mobility 55
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.33
	}
}

armor ah_plate {
	weight 25
	value 1500
	mesh "plate_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 110
	req_str 70
	mobility 40
}

armor ah_plate_hq {
	weight 25
	value 2000
	mesh "plate_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 120
	req_str 70
	mobility 45
	flags hq
}

armor ah_plate_m {
	weight 25
	value 4000
	mesh "plate_armor.qmsh"
	type heavy
	unit_type human
	material metal
	defense 140
	req_str 65
	mobility 45
	flags magical
}

armor ah_plate_mith {
	weight 12.5
	value 6500
	mesh "plate_armor.qmsh"
	tex_override "plate_armor_mith.jpg"
	type heavy
	unit_type human
	material metal
	defense 165
	req_str 70
	mobility 55
	flags magical
}

armor ah_plate_adam {
	weight 30
	value 12000
	mesh "plate_armor.qmsh"
	tex_override "plate_armor_adam.jpg"
	type heavy
	unit_type human
	material metal
	defense 185
	req_str 40
	mobility 40
	flags magical
	effects {
		magic_resistance 0.1
	}
}

armor ah_black_armor {
	weight 30
	value 30000
	mesh "plate_armor.qmsh"
	tex_override "black_armor.jpg"
	type heavy
	unit_type human
	material metal
	defense 220
	req_str 75
	mobility 40
	flags {not_shop not_random unique}
	effects {
		magic_resistance 0.25
	}
}

armor ah_crystal {
	weight 35
	value 6000
	mesh "crystal_armor.qmsh"
	type heavy
	unit_type human
	material crystal
	defense 165
	req_str 80
	mobility 25
	flags hq
}

armor ah_crystal_m {
	weight 35
	value 16000
	mesh "crystal_armor.qmsh"
	type heavy
	unit_type human
	material crystal
	defense 195
	req_str 80
	mobility 25
	flags magical
	effects {
		magic_resistance 0.1
	}
}

armor ah_blood_crystal {
	weight 35
	value 24000
	mesh "crystal_armor.qmsh"
	type heavy
	unit_type human
	material crystal
	defense 210
	req_str 80
	mobility 25
	flags {not_shop not_random magical}
	effects {
		magic_resistance 0.1
	}
}

armor al_blacksmith {
	weight 2
	value 50
	mesh "blacksmith_clothes.qmsh"
	type light
	unit_type human
	material skin
	defense 35
	req_str 30
	mobility 85
	flags not_blacksmith
}

armor al_innkeeper {
	weight 1.5
	value 50
	mesh "innkeeper_clothes.qmsh"
	type light
	unit_type human
	material skin
	defense 15
	req_str 20
	mobility 85
	flags not_blacksmith
}

armor al_goblin {
	weight 4
	value 10
	mesh "goblin_armor.qmsh"
	type light
	unit_type goblin
	material skin
	defense 20
	req_str 20
	mobility 90
	flags not_shop
}

armor al_orc {
	weight 9
	value 15
	mesh "orc_armor.qmsh"
	type light
	unit_type orc
	material skin
	defense 25
	req_str 40
	mobility 85
	flags not_shop
}

armor al_orc_shaman {
	weight 9
	value 100
	ai_value 50
	mesh "orc_shaman_armor.qmsh"
	type light
	unit_type orc
	material skin
	defense 20
	req_str 50
	mobility 85
	flags {not_shop mage magical}
	effects {
		magic_power 1
	}
}

armor am_orc {
	weight 22
	value 50
	mesh "orc_chainmail.qmsh"
	type medium
	unit_type orc
	material metal
	defense 50
	req_str 60
	mobility 60
	flags not_shop
}

armor al_mage {
	weight 1.5
	value 50
	ai_value 100
	mesh "robe.qmsh"
	type light
	unit_type human
	material cloth
	defense 20
	req_str 20
	mobility 90
	flags {not_shop mage magical}
}

armor al_mage2 {
	weight 1.5
	value 150
	ai_value 200
	mesh "robe.qmsh"
	tex_override "robe2.jpg"
	type light
	unit_type human
	material cloth
	defense 30
	req_str 20
	mobility 90
	flags {not_shop mage magical}
	effects {
		magic_power 1
		mana 100
		mana_regeneration 0.1
		magic_resistance 0.1
	}
}

armor al_mage3 {
	weight 1.5
	value 1000
	ai_value 300
	mesh "robe.qmsh"
	tex_override "robe3.jpg"
	type light
	unit_type human
	material cloth
	defense 40
	req_str 20
	mobility 90
	flags {not_shop mage magical}
	effects {
		magic_power 2
		mana 200
		mana_regeneration 0.2
		magic_resistance 0.1
	}
}

armor al_mage4 {
	weight 1.5
	value 3500
	ai_value 400
	mesh "robe.qmsh"
	tex_override "robe4.jpg"
	type light
	unit_type human
	material cloth
	defense 50
	req_str 20
	mobility 90
	flags {not_shop mage unique}
	effects {
		magic_power 3
		mana 300
		mana_regeneration 0.3
		magic_resistance 0.25
	}
}

armor al_necromancer {
	weight 2
	value 100
	ai_value 250
	mesh "necromancer_robe.qmsh"
	type light
	unit_type human
	material cloth
	defense 50
	req_str 25
	mobility 80
	flags {not_shop magical}
	effects {
		magic_power 2
		magic_resistance 0.1
	}
}

armor al_clothes {
	weight 1
	value 5
	mesh "clothes.qmsh"
	type light
	unit_type human
	material cloth
	defense 5
	req_str 20
	mobility 100
	flags not_blacksmith
}

armor al_clothes2 {
	weight 1
	value 15
	mesh "clothes2.qmsh"
	type light
	unit_type human
	material cloth
	defense 5
	req_str 20
	mobility 100
	flags not_blacksmith
}

armor al_clothes2b {
	weight 1
	value 15
	mesh "clothes2.qmsh"
	tex_override "clothes2b.jpg"
	type light
	unit_type human
	material cloth
	defense 5
	req_str 20
	mobility 100
	flags not_blacksmith
}

armor al_clothes3 {
	weight 1
	value 100
	mesh "clothes3.qmsh"
	type light
	unit_type human
	material cloth
	defense 5
	req_str 20
	mobility 100
	flags {not_blacksmith hq}
}

armor al_clothes3b {
	weight 1
	value 100
	mesh "clothes3.qmsh"
	tex_override "clothes3b.jpg"
	type light
	unit_type human
	material cloth
	defense 5
	req_str 20
	mobility 100
	flags {not_blacksmith hq}
}

//------------------------------------------------------------------------------
// AMULETS
//------------------------------------------------------------------------------
amulet a_silver {
	weight 0.1
	value 75
	tex "amulet_silver.png"
}

amulet a_gold {
	weight 0.1
	value 150
	tex "amulet_golden.png"
}

amulet a_ruby {
	weight 0.1
	value 300
	tex "amulet_ruby.png"
}

amulet a_diamond {
	weight 0.1
	value 600
	tex "amulet_diamond.png"
}

amulet a_food : a_silver {
	value 750
	ai_value 90
	flags magical
	effects {
		natural_healing_mod 1.5
	}
}

amulet a_sprinter : a_silver {
	value 750
	ai_value 90
	flags magical
	effects {
		mobility 25
	}
	tag dex
}

amulet a_mage : a_gold {
	value 1500
	ai_value 120
	flags magical
	effects {
		magic_power 5
	}
	tag mage
}

amulet a_defense : a_gold {
	value 1500
	ai_value 120
	flags magical
	effects {
		defense 50
	}
	tag def
}

amulet a_stamina : a_gold {
	value 1500
	ai_value 120
	flags magical
	effects {
		stamina 100
		stamina_regeneration_mod 1.25
	}
	tag stamina
}

amulet a_mana : a_gold {
	value 1500
	ai_value 120
	flags magical
	effects {
		mana 150
		mana_regeneration 0.5
	}
	tag mana
}

amulet a_warrior : a_ruby {
	value 3000
	ai_value 150
	flags magical
	effects {
		attribute str 10
		melee_attack 50
		skill one_handed_weapon 20
	}
	tag {melee str}
}

amulet a_archer : a_ruby {
	value 3000
	ai_value 150
	flags magical
	effects {
		attribute dex 10
		ranged_attack 50
		skill bow 20
	}
	tag {ranged dex}
}

amulet a_antimagic : a_ruby {
	value 3000
	ai_value 180
	flags magical
	effects {
		magic_resistance 0.25
	}
	tag def
}

amulet a_health : a_diamond {
	value 6000
	ai_value 180
	flags magical
	effects {
		health 250
		attribute end 10
		regeneration 10
		poison_resistance 0.25
	}
	tag def
}

//------------------------------------------------------------------------------
// RINGS
//------------------------------------------------------------------------------
ring r_silver {
	weight 0.1
	value 25
	tex "ring_silver.png"
}

ring r_gold {
	weight 0.1
	value 50
	tex "ring_gold.png"
}

ring r_emerald {
	weight 0.1
	value 150
	tex "ring_emerald.png"
}

ring r_str : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute str 5
	}
	tag str
}

ring r_end : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute end 5
	}
	tag def
}

ring r_dex : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute dex 5
	}
	tag dex
}

ring r_int : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute int 5
	}
	tag mage
}

ring r_wis : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute wis 5
	}
}

ring r_cha : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		attribute cha 5
	}
	tag cleric
}

ring r_hp : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		health 100
	}
	tag def
}

ring r_stamina : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		stamina 50
	}
	tag stamina
}

ring r_def : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		defense 15
	}
	tag def
}

ring r_attack : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		melee_attack 15
	}
	tag melee
}

ring r_ranged_attack : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		ranged_attack 15
	}
	tag ranged
}

ring r_mage : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		magic_power 2
	}
	tag mage
}

ring r_one_handed_weapon : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill one_handed_weapon 10
	}
	tag melee
}

ring r_short_blade : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill short_blade 10
	}
	tag melee
}

ring r_long_blade : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill long_blade 10
	}
	tag melee
}

ring r_axe : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill axe 10
	}
	tag melee
}

ring r_blunt : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill blunt 10
	}
	tag melee
}

ring r_bow : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill bow 10
	}
	tag ranged
}

ring r_shield : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill shield 10
	}
	tag def
}

ring r_light_armor : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill light_armor 10
	}
	tag def
}

ring r_medium_armor : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill medium_armor 10
	}
	tag def
}

ring r_heavy_armor : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill heavy_armor 10
	}
	tag def
}

ring r_persuasion : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill persuasion 10
	}
}

ring r_carry : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		carry 1.5
	}
}

ring r_gods_magic : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill gods_magic 10
	}
	tag cleric
}

ring r_concentration : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill concentration 10
	}
	tag mana
}

ring r_mystic_magic : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		skill mystic_magic 10
	}
	tag mage
}

ring r_mana : r_gold {
	value 500
	ai_value 80
	flags magical
	effects {
		mana 100
	}
	tag mana
}

ring r_str2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute str 15
	}
	tag str
}

ring r_end2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute end 15
	}
	tag def
}

ring r_dex2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute dex 15
	}
	tag dex
}

ring r_int2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute int 15
	}
	tag mage
}

ring r_wis2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute wis 15
	}
}

ring r_cha2 : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		attribute cha 15
	}
	tag cleric
}

ring r_regeneration : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		regeneration 5
	}
	tag def
}

ring r_assassin : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		backstab 0.25
	}
	tag melee
}

ring r_poison_resistance : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		poison_resistance 0.5
	}
	tag def
}

ring r_mana_regen : r_emerald {
	value 1500
	ai_value 110
	flags magical
	effects {
		mana_regeneration 1
	}
	tag mana
}

//------------------------------------------------------------------------------
// CONSUMABLES
//------------------------------------------------------------------------------
consumable p_nreg {
	weight 0.2
	value 10
	mesh "natural_pot.qmsh"
	type potion
	time 10
	flags ground_mesh
	effects {
		natural_healing_mod 2
	}
}

consumable p_nreg2 {
	weight 0.2
	value 100
	mesh "natural_pot2.qmsh"
	type potion
	time 30
	flags ground_mesh
	effects {
		natural_healing_mod 2.5
	}
}

consumable p_hp {
	weight 0.1
	value 25
	mesh "hp_pot.qmsh"
	type potion
	flags ground_mesh
	effects {
		heal 250
	}
}

consumable p_hp2 {
	weight 0.1
	value 100
	mesh "hp_pot2.qmsh"
	type potion
	flags ground_mesh
	effects {
		heal 500
	}
}

consumable p_hp3 {
	weight 0.1
	value 400
	mesh "hp_pot3.qmsh"
	type potion
	flags ground_mesh
	effects {
		heal 1000
	}
}

consumable p_mp {
	weight 0.1
	value 25
	mesh "mp_pot.qmsh"
	type potion
	flags ground_mesh
	effects {
		restore_mana 250
	}
}

consumable p_mp2 {
	weight 0.1
	value 100
	mesh "mp_pot2.qmsh"
	type potion
	flags ground_mesh
	effects {
		restore_mana 500
	}
}

consumable p_mp3 {
	weight 0.1
	value 400
	mesh "mp_pot3.qmsh"
	type potion
	flags ground_mesh
	effects {
		restore_mana 1000
	}
}

consumable p_reg {
	weight 0.1
	value 250
	mesh "misc_pot.qmsh"
	type potion
	time 360
	flags ground_mesh
	effects {
		regeneration 5
	}
}

consumable p_antidote {
	weight 0.1
	value 50
	mesh "antidote.qmsh"
	type potion
	time 30
	flags ground_mesh
	effects {
		antidote 0
		poison_resistance 0.5
	}
}

consumable p_antimagic {
	weight 0.2
	value 200
	mesh "misc_pot.qmsh"
	type potion
	time 300
	flags ground_mesh
	effects {
		magic_resistance 0.5
	}
}

consumable p_str {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {not_shop not_random ground_mesh magical}
	effects {
		attribute str 1
	}
}

consumable p_end {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {not_shop not_random ground_mesh magical}
	effects {
		attribute end 1
	}
}

consumable p_dex {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {not_shop not_random ground_mesh magical}
	effects {
		attribute dex 1
	}
}

consumable q_magowie_potion {
	weight 0.1
	value 150
	mesh "antidote.qmsh"
	type potion
	flags {not_shop not_random ground_mesh hq}
}

consumable water {
	weight 0.4
	value 1
	mesh "water.qmsh"
	type drink
	time 10
	flags ground_mesh
	effects {
		stamina_regeneration 20
	}
}

consumable spring_water {
	weight 0.4
	value 10
	mesh "water.qmsh"
	type drink
	time 30
	flags {ground_mesh hq}
	effects {
		stamina_regeneration 30
	}
}

consumable beer {
	weight 0.5
	value 2
	mesh "piwo.qmsh"
	type drink
	time 2
	flags ground_mesh
	effects {
		alcohol 75
	}
}

consumable vodka {
	weight 0.4
	value 10
	mesh "vodka.qmsh"
	type drink
	time 2
	flags ground_mesh
	effects {
		alcohol 150
	}
}

consumable spirit {
	weight 0.4
	value 20
	mesh "vodka.qmsh"
	type drink
	time 2
	flags {ground_mesh hq}
	effects {
		alcohol 300
	}
}

consumable bread {
	weight 0.8
	value 5
	mesh "chleb.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 40
	}
}

consumable meat {
	weight 0.5
	value 10
	mesh "mieso.qmsh"
	type food
	flags {not_merchant ground_mesh}
	time 5
	effects {
		food_regeneration 50
	}
}

consumable raw_meat {
	weight 0.5
	value 5
	mesh "surowe_mieso.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 20
	}
}

consumable sausage {
	weight 0.5
	value 15
	mesh "sausage.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 60
	}
}

consumable fish_meat {
	weight 0.5
	value 7
	mesh "fish_meat.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 40
	}
}

consumable fish {
	weight 1.5
	value 4
	mesh "fish.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 15
	}
}

consumable apple {
	weight 0.1
	value 3
	mesh "jablko.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 25
	}
}

consumable cheese {
	weight 0.5
	value 8
	mesh "ser.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 40
	}
}

consumable honeycomb {
	weight 0.2
	value 15
	mesh "plaster_miodu.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 75
	}
}

consumable rice {
	weight 0.5
	value 5
	mesh "ryz.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 30
	}
}

consumable soup {
	weight 0.3
	value 8
	mesh "soup.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 45
	}
}

consumable stew {
	weight 0.3
	value 14
	mesh "stew.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 60
	}
}

consumable mushroom {
	weight 0.2
	value 4
	mesh "grzyb.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 15
	}
}

consumable muffin {
	weight 0.2
	value 20
	mesh "muffin.qmsh"
	type food
	time 5
	flags {not_merchant ground_mesh}
	effects {
		food_regeneration 100
	}
}

consumable healing_herb {
	weight 0.2
	value 10
	mesh "healing_herb.qmsh"
	type herb
	flags {ground_mesh ingredient}
	effects {
		heal 150
	}
}

consumable mana_herb {
	weight 0.2
	value 10
	mesh "mana_herb.qmsh"
	type herb
	flags {ground_mesh ingredient}
	effects {
		restore_mana 150
	}
}

consumable green_herb {
	weight 0.2
	value 50
	mesh "green_herb.qmsh"
	type herb
	flags {not_merchant ground_mesh}
	effects {
		green_hair 0
	}
}

consumable alchemist_herb {
	weight 0.2
	value 25
	mesh "woddruff_herb.qmsh"
	type herb
	flags {not_shop not_random ground_mesh}
}

//------------------------------------------------------------------------------
// OTHER
//------------------------------------------------------------------------------
other emerald {
	weight 0.1
	value 250
	tex "szmaragd.png"
	type valuable
	flags crystal_sound
}

other ruby {
	weight 0.1
	value 500
	tex "rubin.png"
	type valuable
	flags crystal_sound
}

other diamond {
	weight 0.1
	value 750
	tex "diament.png"
	type valuable
	flags crystal_sound
}

other krystal {
	weight 0.1
	value 1000
	tex "krystal.png"
	type valuable
	flags {not_shop crystal_sound}
}

other golden_bar {
	weight 6
	value 600
	mesh "golden_bar.qmsh"
	type valuable
	flags ground_mesh
}

other golden_cup {
	weight 0.5
	value 300
	mesh "golden_cup.qmsh"
	type valuable
	flags ground_mesh
}

other ladle {
	weight 0.5
	value 5
	mesh "chochla.qmsh"
	type tool
}

other cup {
	weight 0.2
	value 3
	mesh "cup.qmsh"
	flags ground_mesh
}

other plate {
	weight 0.2
	value 3
	mesh "plate.qmsh"
	flags ground_mesh
}

other wolf_pelt {
	weight 2.5
	value 50
	tex "wolf_pelt.png"
}

other worg_pelt {
	weight 2.5
	value 100
	tex "worg_pelt.png"
}

other dire_wolf_pelt {
	weight 5
	value 2000
	tex "dire_wolf_pelt.png"
}

other bear_pelt {
	weight 4
	value 150
	tex "bear_pelt.png"
}

other black_bear_pelt {
	weight 4
	value 200
	tex "black_bear_pelt.png"
}

other heal_crystal {
	weight 0.5
	value 25
	mesh "heal_crystal.qmsh"
	type ingredient
	flags {ground_mesh ingredient}
}

other magic_crystal {
	weight 0.5
	value 25
	mesh "magic_crystal.qmsh"
	type ingredient
	flags {ground_mesh ingredient}
}

other tallow {
	weight 0.5
	value 10
	mesh "tallow.qmsh"
	type ingredient
	flags {ground_mesh ingredient}
}

other troll_blood {
	weight 0.1
	value 50
	mesh "vial.qmsh"
	type ingredient
	flags ingredient
}

//------------------------------------------------------------------------------
// QUEST ITEMS
//------------------------------------------------------------------------------
other a_amulet {
	weight 0.1
	value 100
	tex "a_amulet.png"
	flags {quest not_shop not_random important}
}

other a_amulet2 {
	weight 0.1
	value 100
	tex "a_amulet2.png"
	flags {quest not_shop not_random important}
}

other a_amulet3 {
	weight 0.1
	value 100
	tex "a_amulet3.png"
	flags {quest not_shop not_random important}
}

other a_brosza {
	weight 0.1
	value 100
	tex "a_brosza.png"
	flags {quest not_shop not_random important}
}

other a_butelka {
	weight 0.5
	value 50
	tex "a_butelka.png"
	flags {quest not_shop not_random important}
}

other a_cos {
	weight 0.5
	value 50
	tex "a_cos.png"
	flags {quest not_shop not_random important}
}

other a_czaszka {
	weight 1
	value 50
	tex "a_czaszka.png"
	flags {quest not_shop not_random important}
}

other a_figurka {
	weight 0.2
	value 100
	tex "a_figurka.png"
	flags {quest not_shop not_random important}
}

other a_figurka2 {
	weight 0.2
	value 100
	tex "a_figurka2.png"
	flags {quest not_shop not_random important}
}

other a_figurka3 {
	weight 0.2
	value 100
	tex "a_figurka3.png"
	flags {quest not_shop not_random important}
}

other a_ksiega {
	weight 0.5
	value 50
	tex "a_ksiega.png"
	flags {quest not_shop not_random important}
}

other a_maska {
	weight 0.5
	value 100
	tex "a_maska.png"
	flags {quest not_shop not_random important}
}

other a_maska2 {
	weight 0.5
	value 100
	tex "a_maska2.png"
	flags {quest not_shop not_random important}
}

other a_misa {
	weight 0.5
	value 50
	tex "a_misa.png"
	flags {quest not_shop not_random important}
}

other a_moneta {
	weight 0.1
	value 50
	tex "a_moneta.png"
	flags {quest not_shop not_random important}
}

other a_pierscien {
	weight 0.1
	value 100
	tex "a_pierscien.png"
	flags {quest not_shop not_random important}
}

other a_pierscien2 {
	weight 0.1
	value 100
	tex "a_pierscien2.png"
	flags {quest not_shop not_random important}
}

other a_pierscien3 {
	weight 0.1
	value 100
	tex "a_pierscien3.png"
	flags {quest not_shop not_random important}
}

other a_talizman {
	weight 0.1
	value 75
	tex "a_talizman.png"
	flags {quest not_shop not_random important}
}

other a_talizman2 {
	weight 0.1
	value 75
	tex "a_talizman2.png"
	flags {quest not_shop not_random important}
}

other key_kopalnia {
	weight 0.1
	value 0
	tex "old-key.png"
	flags {not_shop not_random important}
}

other q_bandyci_paczka {
	weight 5
	value 0
	tex "paczka.png"
	flags {not_shop not_random important dont_drop}
}

other q_bandyci_list {
	weight 0.1
	value 0
	tex "list.png"
	flags {not_shop not_random important}
}

other q_magowie_kula {
	weight 1
	value 0
	tex "magic_sphere.png"
	flags {not_shop not_random important}
}

other q_magowie_kula2 {
	weight 1
	value 5000
	tex "magic_sphere.png"
	flags {not_shop not_random}
}

other q_orkowie_klucz {
	weight 1
	value 0
	tex "rusty-key.png"
	flags {not_shop not_random important}
}

other key_lunar {
	weight 0.1
	value 100
	tex "moon_key.png"
	flags {not_shop not_random important}
}

other q_szaleni_kamien {
	weight 5
	value 0
	tex "kamien2.png"
	flags {not_shop not_random important not_team}
}

other sekret_kartka {
	weight 0.1
	value 0
	tex "piece_of_paper.png"
	flags {not_shop not_random}
}

other sekret_kartka2 {
	weight 0.1
	value 0
	tex "piece_of_paper.png"
	flags {not_shop not_random}
}

other q_main_letter {
	weight 0.1
	value 0
	tex "list.png"
	flags {not_shop not_random}
}

other letter {
	weight 0.1
	value 0
	tex "list.png"
	flags {quest not_shop not_random dont_drop}
}

other parcel {
	weight 1
	value 0
	tex "paczka.png"
	flags {quest not_shop not_random important dont_drop}
}

other wanted_letter {
	weight 0.1
	value 0
	tex "wanted.png"
	flags {quest not_shop not_random}
}

other q_resources {
	weight 10
	value 0
	mesh "resources_box.qmsh"
	flags {quest not_shop not_random important dont_drop ground_mesh}
}

other q_infected_organ {
	weight 0.3
	value 0
	tex "infectedOrgan.png"
	flags {not_shop not_random}
}

other q_yellow_crystal {
	weight 0.1
	value 100
	tex "yellowCrystal.png"
	type valuable
	flags {not_shop not_random crystal_sound}
}

other q_yellow_herbs {
	weight 0.1
	value 100
	tex "yellowHerbs.png"
	flags {not_shop not_random}
}

//------------------------------------------------------------------------------
// BOOKS
//------------------------------------------------------------------------------
book_scheme book {
	texture "book.png"
	// assuming 1024x768 resolution, this values are scaled
	size {800 600}
	regions {
		{50 17 390 505}
		{405 17 745 505}
	}
	prev {42 497}
	next {737 497}
}

book_scheme page {
	texture "page.jpg"
	size {437 566}
	regions {
		{50 50 387 496}
	}
	prev {30 536}
	next {407 536}
}

book book_history {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags ground_mesh
}

book book_orcs {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags ground_mesh
}

book book_undead {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags ground_mesh
}

book book_behind_the_wall {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags ground_mesh
}

book book_adventurer {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags ground_mesh
}

book book_ld {
	weight 0.2
	value 100
	mesh "book.qmsh"
	scheme book
	flags {not_shop not_random ground_mesh}
}

book book_runic {
	weight 0.2
	value 100
	mesh "book.qmsh"
	scheme book
	flags {not_shop not_random ground_mesh}
	runic 1
}

book q_zlo_ksiega {
	weight 1
	value 100
	tex "summoning.png"
	scheme book
	flags {not_shop not_random}
	runic 1
}

book magic_scroll {
	weight 0.1
	value 100
	mesh "scroll.qmsh"
	scheme book
	flags {not_shop not_random magic_scroll magical}
}

book book_q_cleric {
	weight 1
	value 100
	mesh "book.qmsh"
	scheme book
	flags {not_shop not_random ground_mesh important}
	runic 1
}

book book_q_journal {
	weight 0.2
	value 0
	mesh "book.qmsh"
	scheme book
	flags {not_shop not_random ground_mesh important}
}

book crypt_note {
	weight 0.1
	value 0
	scheme page
	tex "piece_of_paper.png"
	flags {not_shop not_random}
}

book recipe_antidote {
	weight 0.1
	value 200
	mesh "recipe.qmsh"
	scheme page
	recipes p_antidote
	type recipe
	flags single_use
}

book recipe_reg {
	weight 0.1
	value 500
	mesh "recipe.qmsh"
	scheme page
	recipes p_reg
	type recipe
	flags single_use
}

book recipe_antimagic {
	weight 0.1
	value 1000
	mesh "recipe.qmsh"
	scheme page
	recipes p_antimagic
	type recipe
	flags single_use
}

book recipe_book_nreg {
	weight 1
	value 250
	mesh "book.qmsh"
	scheme book
	recipes {
		p_nreg
		p_nreg2
	}
	type recipe
	flags {ground_mesh hq}
}

//------------------------------------------------------------------------------
// GOLD
//------------------------------------------------------------------------------
gold gold {
	weight 0
	value 1
	tex "goldstack.png"
}

//------------------------------------------------------------------------------
// LISTS
//------------------------------------------------------------------------------
// base items, weapon is given for rised units that have no weapon, heroes will
// buy items from this list if they have empty slot
// should contain single item of each type(weapon, mage weapon, bow, shield,
// armor, mage armor)
list base_items {
	dagger_knife
	sword_wooden
	axe_rusted
	blunt_club
	wand_novice
	bow_short
	shield_plank
	al_mage
	al_padded
	am_hide
	ah_splint_rusted
}

list normal_food {
	bread
	meat
	apple
	cheese
	honeycomb
	rice
	sausage
	fish_meat
	soup
	stew
	muffin
}

list orc_food {
	bread
	meat
	raw_meat
	mushroom
	fish
}

list food_and_drink {
	bread
	meat
	apple
	cheese
	honeycomb
	rice
	raw_meat
	sausage
	fish_meat
	soup
	stew
	muffin
	fish
	water
	beer
	vodka
	spirit
}

list drink priority {
	2 beer
	vodka
}

list ancient_armory_armors {
	al_dragonskin
	al_chain_shirt_mith
	am_chainmail_mith
	am_breastplate_mith
	am_breastplate_adam
	ah_splint_mith
	ah_plate_mith
	ah_plate_adam
	ah_crystal
	ah_crystal_m
}

list contest_reward {
	p_str
	p_end
	p_dex
}

list treasure {
	emerald
	ruby
	diamond
	golden_bar
	golden_cup
}

list books {
	book_history
	book_orcs
	book_undead
	book_adventurer
	book_behind_the_wall
}

list rare_books {
	book_ld
	book_runic
}

list short_blade leveled {
	dagger_knife 1
	dagger_short 2
	dagger_sword 5
	dagger_rapier 7
	dagger_cutlass 10
	dagger_assassin 13
	dagger_sword_a 16
}

list long_blade leveled {
	sword_wooden 1
	sword_long 2
	sword_scimitar 5
	sword_orcish 7
	sword_serrated 10
	sword_mercenary 13
	sword_adamantine 16
}

list axe leveled {
	axe_rusted 1
	axe_small 2
	axe_battle 5
	axe_orcish 7
	axe_crystal 10
	axe_dwarf 13
	axe_giant 16
}

list blunt leveled {
	blunt_club 1
	blunt_mace 2
	pickaxe 4
	blacksmith_hammer 4
	blunt_orcish 5
	blunt_barbed 7
	blunt_morningstar 10
	blunt_dwarven 13
	blunt_adamantine 16
}

list wand leveled {
	wand_novice 1
	wand_adept 5
	wand_expert 10
	wand_master 15
}

list bow leveled {
	bow_short 1
	bow_long 4
	bow_composite 8
	bow_elven 12
	bow_dragonbone 16
}

list shield leveled {
	shield_plank 1
	shield_wood 3
	shield_kite 5
	shield_iron 7
	shield_steel 10
	shield_mithril 13
	shield_spiked 14
	shield_adamantine 16
}

list light_armor leveled {
	al_padded 1
	al_padded_hq 2
	al_padded_m 4
	al_leather 2
	al_leather_hq 3
	al_leather_m 5
	al_studded 5
	al_studded_hq 6
	al_studded_m 8
	al_chain_shirt 10
	al_chain_shirt_hq 11
	al_chain_shirt_m 13
	al_chain_shirt_mith 15
	al_dragonskin 18
}

list medium_armor leveled {
	am_hide 1
	am_hide_hq 2
	am_hide_m 4
	am_troll_hide 8
	am_chainmail 2
	am_chainmail_hq 3
	am_chainmail_m 5
	am_chainmail_mith 7
	am_scale 5
	am_scale_hq 6
	am_scale_m 8
	am_dragonscale 18
	am_breastplate 10
	am_breastplate_hq 11
	am_breastplate_m 13
	am_breastplate_mith 15
	am_breastplate_adam 17
}

list heavy_armor leveled {
	ah_splint_rusted 1 // this is level 2 but there is nothing worse, people needs to get something
	ah_splint 5
	ah_splint_hq 6
	ah_splint_m 8
	ah_splint_mith 10
	ah_plate 10
	ah_plate_hq 11
	ah_plate_m 13
	ah_plate_mith 15
	ah_plate_adam 17
	ah_crystal 15
	ah_crystal_m 18
}

list mage_armor leveled {
	al_mage 1
	al_mage2 9
	al_mage3 13
}

list amulets leveled {
	a_food 9
	a_sprinter 9
	a_mage 12
	a_defense 12
	a_stamina 12
	a_mana 12
	a_warrior 15
	a_archer 15
	a_antimagic 15
	a_health 18
}

list rings leveled {
	r_str 8
	r_end 8
	r_dex 8
	r_int 8
	r_wis 8
	r_cha 8
	r_hp 8
	r_stamina 8
	r_def 8
	r_attack 8
	r_ranged_attack 8
	r_mage 8
	r_one_handed_weapon 8
	r_short_blade 8
	r_long_blade 8
	r_axe 8
	r_blunt 8
	r_bow 8
	r_shield 8
	r_light_armor 8
	r_medium_armor 8
	r_heavy_armor 8
	r_persuasion 8
	r_carry 8
	r_gods_magic 8
	r_concentration 8
	r_mystic_magic 8
	r_mana 8
	r_str2 11
	r_end2 11
	r_dex2 11
	r_int2 11
	r_wis2 11
	r_cha2 11
	r_regeneration 11
	r_assassin 11
	r_poison_resistance 11
	r_mana_regen 11
}

list potions {
	p_nreg
	p_nreg2
	p_hp
	p_hp2
	p_hp3
	p_mp
	p_mp2
	p_mp3
	p_reg
	p_antidote
	p_antimagic
}

list ingredients priority {
	4 healing_herb
	4 mana_herb
	3 heal_crystal
	3 magic_crystal
	2 tallow
	2 troll_blood
}

list recipes {
	recipe_antidote
	recipe_reg
	recipe_antimagic
	recipe_book_nreg
}

list artifacts {
	a_amulet
	a_amulet2
	a_amulet3
	a_brosza
	a_butelka
	a_cos
	a_czaszka
	a_figurka
	a_figurka2
	a_figurka3
	a_ksiega
	a_maska
	a_maska2
	a_misa
	a_moneta
	a_pierscien
	a_pierscien2
	a_pierscien3
	a_talizman
	a_talizman2
}

//------------------------------------------------------------------------------
// STOCK SCRIPTS
//------------------------------------------------------------------------------
// merchant
stock merchant {
	// random items
	script {
		int priceLimit, count = Random(15, 20);
		if(Level::IsCity())
		{
			priceLimit = Random(2000, 2500); // city
			count += 5;
		}
		else if(Level::IsVillage())
			priceLimit = Random(500, 1000); // village
		else if(Level::IsTutorial())
			priceLimit = 500; // tutorial
		else
			priceLimit = 1000; // traveling merchant
		for(int i=0; i<count; ++i)
		{
			ITEM_TYPE type = ITEM_TYPE(Rand() % 9);
			if(type == IT_CONSUMABLE || type == IT_OTHER)
				StockScript::AddRandomItem(type, priceLimit/5, ITEM_NOT_SHOP | ITEM_NOT_MERCHANT, Random(2,5));
			else
				StockScript::AddRandomItem(type, priceLimit, ITEM_NOT_SHOP | ITEM_NOT_MERCHANT);
		}
	}
	// potions
	random 5 10 p_nreg
	random 5 10 p_hp
}

// blacksmith - random equipment & 1 set of selected items
stock blacksmith {
	// basic equipment
	script {
		int count = Random(12, 18);
		int priceLimit;
		if(Level::IsCity())
			priceLimit = 99999;
		else
		{
			count -= Random(1, 3);
			priceLimit = Random(1250, 2500);
		}
		for(int i=0; i<count; ++i)
		{
			ITEM_TYPE type = ITEM_TYPE(Rand() % 4);
			StockScript::AddRandomItem(type, priceLimit, ITEM_NOT_SHOP | ITEM_NOT_BLACKSMITH);
		}
	}

	// short blade
	set {
		dagger_short
		dagger_sword
		dagger_rapier
		city dagger_cutlass
		city dagger_assassin
	}
	// long blade
	set {
		sword_long
		sword_scimitar
		sword_orcish
		city sword_serrated
		city sword_mercenary
	}
	// axe
	set {
		axe_small
		axe_battle
		axe_orcish
		city axe_crystal
		city axe_dwarf
	}
	// blunt
	set {
		blunt_mace
		blunt_orcish
		blunt_barbed
		city blunt_morningstar
		city blunt_dwarven
	}
	// bow
	set {
		bow_short
		bow_long
		bow_composite
		city bow_elven
	}
	// shield
	set {
		shield_wood
		shield_iron
		shield_steel
		city shield_mithril
	}
	// light armor
	set {
		city {
			chance al_padded_m al_padded_hq
			chance al_leather_m al_leather_hq
			chance al_studded_m al_studded_hq
			chance {
				al_chain_shirt_mith 1
				al_chain_shirt_m 2
				al_chain_shirt_hq 2
			}
		}
		else {
			chance al_padded_hq al_padded
			chance al_leather_hq al_leather
			chance al_studded_hq al_studded
			chance al_chain_shirt_hq al_chain_shirt
		}
	}
	// medium armor
	set {
		city {
			chance am_hide_m am_hide_hq
			chance {
				am_chainmail_mith 1
				am_chainmail_m 2
				am_chainmail_hq 2
			}
			chance am_scale_m am_scale_hq
			chance {
				am_breastplate_mith 1
				am_breastplate_m 2
				am_breastplate_hq 2
			}
		}
		else {
			chance am_hide_hq am_hide
			chance am_chainmail_hq am_chainmail
			chance am_scale_hq am_scale
			chance am_breastplate_hq am_breastplate
		}
	}
	// heavy armor
	set {
		city {
			chance {
				ah_splint_mith 1
				ah_splint_m 2
				ah_splint_hq 2
			}
			chance ah_plate_m ah_plate_hq
		}
		else {
			ah_splint_rusted
			chance ah_splint_hq ah_splint
			chance ah_plate_hq ah_plate
		}
	}
}

// alchemist - random potions
stock alchemist {
	script {
		int priceLimit;
		int potionCount = Random(12, 18);
		int recipeCount = Random(1, 3);

		if(!Level::IsCity())
		{
			priceLimit = Random(150, 250);
			potionCount -= Random(1, 3);
			--recipeCount;
		}
		else
			priceLimit = Random(250, 350);

		// potions
		ItemList@ lis = ItemList::Get("potions");
		for(int i=0; i<potionCount; ++i)
			StockScript::AddItem(lis.GetItem(), Random(3, 6));

		// ingredients
		@lis = ItemList::Get("ingredients");
		for(int i=0; i<10; ++i)
		{
			Item@ item = lis.GetItem();
			int count = priceLimit / item.value;
			if(count > 0)
				StockScript::AddItem(item, count);
		}

		// recipes
		@lis = ItemList::Get("recipes");
		for(int i=0; i<recipeCount; ++i)
			StockScript::AddItem(lis.GetItem());
	}
	random 2 5 ladle
}

// innkeeper drinks & food
stock innkeeper {
	// random food
	script {
		int count = Random(10, 20);
		if(!Level::IsCity())
			count -= Random(1, 3);
		ItemList@ list = ItemList::Get("normal_food");
		for(int i=0; i<count; ++i)
			StockScript::AddItem(list.GetItem());
	}
	// drinks
	city {
		random 10 15 beer
		random 8 12 vodka
		random 5 10 water
		random 2 4 spirit
		random 0 2 spring_water
	}
	else {
		random 5 7 beer
		random 4 6 vodka
		random 2 5 water
		random 1 2 spirit
		random 0 2 spring_water
	}
}

// food seller - food & drinks and sometimes cooking items
stock food_seller {
	script {
		ItemList@ list = ItemList::Get("food_and_drink");
		bool isVillage = !Level::IsCity();
		for(int i=0, count=list.Size(); i<count; ++i)
		{
			int value = Random(50, 100);
			if(isVillage)
				value /= 2;
			Item@ item = list.GetItem(i);
			int add = value / item.value;
			if(add > 0)
				StockScript::AddItem(item, add);
		}
		if(Rand() % 4 == 0)
			StockScript::AddItem(Item::Get("frying_pan"));
		if(Rand() % 4 == 0)
			StockScript::AddItem(Item::Get("ladle"));
	}
}

stock orc_blacksmith {
	random 1 3 sword_orcish
	random 1 3 axe_orcish
	random 1 3 blunt_orcish
	blunt_orcish_shaman
	bow_long
	shield_iron
	shield_steel
	random 1 2 al_orc
	random 1 2 am_orc
	al_orc_shaman
}

stock alchemist_apprentice {
	8 p_hp
	3 p_hp2
	5 p_nreg
	ladle
}

stock mage_seller {
	random 2 4 amulets
	random 6 8 rings
	random 1 2 magic_scroll
	random 2 3 wand
	random 2 3 mage_armor
}

stock inn_on_table {
	script {
		if(Rand() % 2 == 0)
		{
			Item@ beer = Item::Get("beer");
			StockScript::AddItem(beer);
			if(Rand() % 4 == 0)
				StockScript::AddItem(beer);
		}
		if(Rand() % 3 == 0)
			StockScript::AddItem(Item::Get("plate"));
		if(Rand() % 3 == 0)
			StockScript::AddItem(Item::Get("cup"));
	}
}

stock inn_on_shelve {
	random 3 5 beer
	random 1 3 vodka
}

stock foodseller_shelve {
	20 food_and_drink
}

stock alchemist_shelve {
	script {
		Item@ p_hp = Item::Get("p_hp");
		StockScript::AddItem(p_hp);
		if(Rand() % 2 == 0)
			StockScript::AddItem(p_hp);
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("p_nreg"));
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("healing_herb"));
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("p_mp"));
	}
}

//------------------------------------------------------------------------------
// START ITEMS
//------------------------------------------------------------------------------
start_items {
	short_blade {
		0 dagger_knife
		10 dagger_short
		20 dagger_sword
		30 dagger_rapier
		* dagger_assassin
	}
	long_blade {
		0 sword_wooden
		10 sword_long
		20 sword_scimitar
		30 sword_orcish
		* sword_serrated
	}
	axe {
		0 axe_rusted
		10 axe_small
		20 axe_battle
		30 axe_orcish
		* axe_crystal
	}
	blunt {
		0 blunt_club
		10 blunt_mace
		20 blunt_orcish
		30 blunt_morningstar
		* blunt_dwarven
	}
	bow {
		5 bow_short
		20 bow_long
		30 bow_composite
		* bow_elven
	}
	shield {
		5 shield_plank
		10 shield_wood
		20 shield_iron
		30 shield_steel
		* shield_mithril
	}
	light_armor {
		0 al_padded
		10 al_padded_hq
		15 al_leather_hq
		20 al_studded
		30 al_studded_hq
		* al_chain_shirt
		mage 0 al_clothes
		mage 10 al_mage
		mage 25 al_mage2
		mage * al_mage3
	}
	medium_armor {
		0 am_hide
		10 am_chainmail
		15 am_chainmail_hq
		20 am_scale
		30 am_scale_hq
		* am_breastplate
	}
	heavy_armor {
		0 ah_splint_rusted
		20 ah_splint
		30 ah_splint_hq
		* ah_plate
	}
	mystic_magic {
		0 wand_novice
		25 wand_adept
		* wand_expert
	}
	gods_magic {
		* a_mana
	}
}

//------------------------------------------------------------------------------
// BETTER ITEMS
// This is for ai buying better items for gold, shouldn't contain unique items
//------------------------------------------------------------------------------
better_items {
	dagger_knife dagger_short
	dagger_short dagger_sword
	dagger_sword dagger_rapier
	dagger_rapier dagger_assassin
	dagger_assassin dagger_sword_a
	sword_wooden sword_long
	sword_long sword_scimitar
	sword_scimitar sword_orcish
	sword_orcish sword_serrated
	sword_serrated sword_adamantine
	axe_rusted axe_small
	axe_small axe_battle
	axe_battle axe_orcish
	axe_orcish axe_crystal
	axe_crystal axe_giant
	blunt_club blunt_mace
	blunt_mace blunt_orcish
	blunt_orcish blunt_morningstar
	blunt_morningstar blunt_dwarven
	blunt_dwarven blunt_adamantine
	blacksmith_hammer blunt_orcish
	pickaxe blunt_orcish
	frying_pan blunt_orcish
	wand_novice wand_adept
	wand_adept wand_expert
	wand_expert wand_master

	bow_short bow_long
	bow_long bow_composite
	bow_composite bow_elven
	bow_elven bow_dragonbone

	shield_plank shield_wood
	shield_wood shield_iron
	shield_iron shield_steel
	shield_steel shield_mithril
	shield_mithril shield_adamantine

	al_padded al_leather
	al_padded_hq al_leather
	al_padded_m al_chain_shirt
	al_leather al_studded
	al_leather_hq al_studded
	al_leather_m al_chain_shirt
	al_studded al_chain_shirt
	al_studded_hq al_chain_shirt
	al_studded_m al_chain_shirt_hq
	al_chain_shirt al_chain_shirt_hq
	al_chain_shirt_hq al_chain_shirt_m
	al_chain_shirt_m al_dragonskin
	al_chain_shirt_mith al_dragonskin

	am_hide am_chainmail
	am_hide_hq am_chainmail
	am_hide_m am_breastplate
	am_troll_hide am_breastplate_m
	am_chainmail am_scale
	am_chainmail_hq am_scale
	am_chainmail_m am_breastplate_hq
	am_chainmail_mith am_breastplate_hq
	am_scale am_breastplate
	am_scale_hq am_breastplate
	am_scale_m am_breastplate_m
	am_breastplate am_breastplate_hq
	am_breastplate_hq am_breastplate_m
	am_breastplate_m am_breastplate_adam
	am_breastplate_mith am_breastplate_adam
	am_breastplate_adam am_dragonscale

	ah_splint_rusted ah_splint
	ah_splint ah_splint_hq
	ah_splint_hq ah_splint_m
	ah_splint_m ah_plate
	ah_splint_mith ah_plate
	ah_plate ah_crystal
	ah_plate_hq ah_crystal
	ah_plate_m ah_crystal
	ah_plate_mith ah_crystal
	ah_crystal ah_plate_adam
	ah_crystal_m ah_plate_adam

	al_blacksmith al_studded
	al_innkeeper al_leather
	al_mage al_mage2
	al_mage2 al_mage3
	al_necromancer al_chain_shirt
	al_clothes al_leather
	al_clothes2 al_leather
	al_clothes2b al_leather
	al_clothes3 al_leather
	al_clothes3b al_leather
}

//------------------------------------------------------------------------------
// RECIPES
//------------------------------------------------------------------------------
recipe p_hp {
	result p_hp
	ingredients {
		healing_herb
	}
	skill 1
	autolearn 1
	order 0
}

recipe p_hp2 {
	result p_hp2
	ingredients {
		heal_crystal
		healing_herb
	}
	skill 25
	autolearn 1
	order 1
}

recipe p_hp3 {
	result p_hp3
	ingredients {
		2 heal_crystal
	}
	skill 50
	autolearn 1
	order 2
}

recipe p_mp {
	result p_mp
	ingredients {
		mana_herb
	}
	skill 1
	autolearn 1
	order 3
}

recipe p_mp2 {
	result p_mp2
	ingredients {
		magic_crystal
		mana_herb
	}
	skill 25
	autolearn 1
	order 4
}

recipe p_mp3 {
	result p_mp3
	ingredients {
		2 magic_crystal
	}
	skill 50
	autolearn 1
	order 5
}

recipe p_nreg {
	result p_nreg
	ingredients {
		tallow
		healing_herb
	}
	skill 1
	order 6
}

recipe p_nreg2 {
	result p_nreg2
	ingredients {
		2 tallow
		healing_herb
	}
	skill 25
	order 7
}

recipe p_antidote {
	result p_antidote
	ingredients {
		healing_herb
		mana_herb
	}
	skill 1
	order 8
}

recipe p_reg {
	result p_reg
	ingredients {
		troll_blood
		healing_herb
	}
	skill 25
	order 9
}

recipe p_antimagic {
	result p_antimagic
	ingredients {
		2 magic_crystal
		heal_crystal
	}
	skill 50
	order 10
}

//------------------------------------------------------------------------------
// ALIASES (new id, old id)
//------------------------------------------------------------------------------
// renamed in V_0_13
alias wand_novice wand_1
alias wand_adept wand_2
alias wand_expert wand_3
// renamed in V_0_17
alias r_persuasion r_haggle
