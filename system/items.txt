// This file contains list of items

//------------------------------------------------------------------------------
// WEAPONS
//------------------------------------------------------------------------------
weapon knife {
	weight 0.2
	value 2
	mesh "knife.qmsh"
	attack 5
	reqStr 15
	type shortBlade
	material metal
	dmgType pierce
}

weapon dagger {
	weight 0.6
	value 10
	mesh "sztylet.qmsh"
	attack 15
	reqStr 20
	type shortBlade
	material metal
	dmgType pierce
}

weapon shortSword {
	weight 0.9
	value 100
	mesh "short_sword.qmsh"
	attack 45
	reqStr 25
	type shortBlade
	material metal
	dmgType pierce
}

weapon rapier {
	weight 0.9
	value 250
	mesh "rapier.qmsh"
	attack 65
	reqStr 22
	type shortBlade
	material metal
	dmgType pierce
}

weapon cutlass {
	weight 1
	value 1000
	mesh "cutlass.qmsh"
	attack 90
	reqStr 30
	type shortBlade
	material metal
	dmgType {pierce slash}
	flags hq
}

weapon assassinDagger {
	weight 0.6
	value 3000
	mesh "sztylet_zabojcy.qmsh"
	attack 120
	reqStr 20
	type shortBlade
	material metal
	dmgType pierce
	flags hq
	effects {
		onAttack backstab 0.1
	}
}

weapon shortAdamantineSword {
	weight 1
	value 7500
	mesh "adam_kmiecz.qmsh"
	attack 150
	reqStr 26
	type shortBlade
	material metal
	dmgType pierce
	flags magical
}

weapon spinesheathDagger {
	weight 0.5
	value 25000
	mesh "grzbietokluj.qmsh"
	attack 180
	reqStr 20
	type shortBlade
	material metal
	dmgType pierce
	flags {notShop notRandom unique}
	effects {
		onAttack backstab 0.25
	}
}

weapon woodenSword {
	weight 1
	value 2
	mesh "sword_wood.qmsh"
	attack 10
	reqStr 30
	type longBlade
	material wood
	dmgType blunt
}

weapon longSword {
	weight 1.8
	value 20
	mesh "sword.qmsh"
	attack 20
	reqStr 40
	type longBlade
	material metal
	dmgType slash
}

weapon scimitar {
	weight 1.8
	value 100
	mesh "sejmitar.qmsh"
	attack 35
	reqStr 50
	type longBlade
	material metal
	dmgType slash
}

weapon orcSword {
	weight 2.2
	value 200
	mesh "orc_sword.qmsh"
	attack 70
	reqStr 55
	type longBlade
	material metal
	dmgType slash
}

weapon serratedSword {
	weight 2
	value 1200
	mesh "zabkowany_miecz.qmsh"
	attack 100
	reqStr 45
	type longBlade
	material metal
	dmgType slash
	flags hq
}

weapon mercenarySword {
	weight 2.5
	value 3000
	mesh "naraphim_sword.qmsh"
	attack 130
	reqStr 50
	type longBlade
	material metal
	dmgType slash
	flags hq
}

weapon adamantineSword {
	weight 2
	value 7500
	mesh "adam_miecz.qmsh"
	attack 160
	reqStr 50
	type longBlade
	material metal
	dmgType slash
	flags magical
}

weapon semurScimitar {
	weight 1.8
	value 30000
	aiValue 500
	mesh "semur.qmsh"
	attack 200
	reqStr 45
	type longBlade
	material metal
	dmgType slash
	flags {notShop notRandom mage unique}
	effects {
		magicPower 15
	}
}

weapon forbiddenSword {
	weight 2
	value 500000
	mesh "sny.qmsh"
	attack 250
	reqStr 45
	type longBlade
	material crystal
	dmgType {slash pierce blunt}
	flags {notShop notRandom unique}
	effects {
		magicPower 10
	}
}

weapon rustedHatchet {
	weight 1.2
	value 10
	mesh "axe_rusted.qmsh"
	attack 15
	reqStr 40
	type axe
	material metal
	dmgType slash
}

weapon hatchet {
	weight 1.3
	value 15
	mesh "hatchet.qmsh"
	attack 25
	reqStr 45
	type axe
	material metal
	dmgType slash
}

weapon battleAxe {
	weight 2.7
	value 80
	mesh "battle_axe.qmsh"
	attack 55
	reqStr 55
	type axe
	material metal
	dmgType slash
}

weapon orcAxe {
	weight 3
	value 220
	mesh "orc_axe.qmsh"
	attack 75
	reqStr 65
	type axe
	material metal
	dmgType slash
}

weapon crystalAxe {
	weight 3.5
	value 1500
	mesh "crystal_axe.qmsh"
	attack 105
	reqStr 60
	type axe
	material crystal
	dmgType slash
	flags hq
}

weapon dwarfAxe {
	weight 2.8
	value 4000
	mesh "axe_dwarf.qmsh"
	attack 135
	reqStr 55
	type axe
	material metal
	dmgType slash
	flags hq
}

weapon giantAxe {
	weight 3.5
	value 9000
	mesh "giant_axe.qmsh"
	attack 165
	reqStr 70
	type axe
	material metal
	dmgType slash
	flags magical
}

weapon ripperAxe {
	weight 3.5
	value 40000
	mesh "rozpruwacz.qmsh"
	attack 210
	reqStr 75
	type axe
	material metal
	dmgType {slash pierce}
	flags {notShop notRandom unique}
}

weapon club {
	weight 1.3
	value 2
	mesh "maczuga.qmsh"
	attack 15
	reqStr 40
	type blunt
	material wood
	dmgType blunt
}

weapon mace {
	weight 3.6
	value 12
	mesh "buzdygan.qmsh"
	attack 25
	reqStr 50
	type blunt
	material metal
	dmgType blunt
}

weapon orcHammer {
	weight 4
	value 75
	mesh "orc_hammer.qmsh"
	attack 60
	reqStr 60
	type blunt
	material rock
	dmgType blunt
}

weapon shamanOrcHammer {
	weight 2
	value 50
	aiValue 150
	mesh "ozdobny_orkowy_mlot.qmsh"
	attack 30
	reqStr 40
	type blunt
	material rock
	dmgType blunt
	flags {notShop mage}
	effects {
		magicPower 2
	}
}

weapon barbedCudgel {
	weight 2
	value 180
	mesh "barbed_cudgel.qmsh"
	attack 80
	reqStr 50
	type blunt
	material metal
	dmgType {blunt pierce}
}

weapon morningstar {
	weight 2.7
	value 800
	mesh "morgensztern.qmsh"
	attack 110
	reqStr 55
	type blunt
	material metal
	dmgType {blunt pierce}
	flags hq
}

weapon dwarfHammer {
	weight 4.4
	value 2500
	mesh "krasnoludzki_mlot.qmsh"
	attack 140
	reqStr 60
	type blunt
	material metal
	dmgType blunt
	flags hq
}

weapon ogreClub {
	weight 20
	value 150
	mesh "ogre_club.qmsh"
	attack 160
	reqStr 120
	type blunt
	material wood
	dmgType {blunt pierce}
	flags notShop
}

weapon adamantineMace {
	weight 4
	value 6000
	mesh "adam_buzdygan.qmsh"
	attack 170
	reqStr 60
	type blunt
	material metal
	dmgType blunt
	flags magical
}

weapon skullsmasherMace {
	weight 5
	value 20000
	mesh "rozlupywacz.qmsh"
	attack 220
	reqStr 70
	type blunt
	material metal
	dmgType {blunt pierce}
	flags {notShop notRandom unique}
}

weapon blacksmithHammer {
	weight 3
	value 40
	mesh "mlot_kowala.qmsh"
	attack 50
	reqStr 50
	type blunt
	material metal
	dmgType blunt
}

weapon pickaxe {
	weight 2.5
	value 30
	mesh "kilof.qmsh"
	attack 50
	reqStr 55
	type blunt
	material metal
	dmgType blunt
}

weapon fryingPan {
	weight 1.5
	value 25
	mesh "frying_pan.qmsh"
	attack 35
	reqStr 25
	type blunt
	material metal
	dmgType blunt
}

weapon noviceWand {
	weight 0.6
	value 75
	aiValue 100
	mesh "wand1.qmsh"
	attack 10
	reqStr 15
	type blunt
	material wood
	dmgType blunt
	flags {notShop mage magical wand}
	effects {
		magicPower 1
	}
}

weapon adeptWand {
	weight 0.6
	value 200
	aiValue 200
	mesh "wand2.qmsh"
	attack 25
	reqStr 15
	type blunt
	material wood
	dmgType blunt
	flags {notShop mage magical wand}
	effects {
		magicPower 4
	}
}

weapon expertWand {
	weight 0.6
	value 1250
	aiValue 300
	mesh "wand3.qmsh"
	attack 50
	reqStr 15
	type blunt
	material wood
	dmgType blunt
	flags {notShop mage magical wand}
	effects {
		magicPower 8
	}
}

weapon masterWand {
	weight 0.6
	value 6500
	aiValue 400
	mesh "wand4.qmsh"
	attack 75
	reqStr 15
	type blunt
	material wood
	dmgType blunt
	flags {notShop mage magical wand}
	effects {
		magicPower 12
	}
}

//------------------------------------------------------------------------------
// BOWS
//------------------------------------------------------------------------------
bow shortBow {
	weight 0.9
	value 30
	mesh "luk_krotki.qmsh"
	attack 15
	speed 40
	reqStr 25
}

bow longBow {
	weight 1.3
	value 75
	mesh "luk_dlugi.qmsh"
	attack 45
	speed 45
	reqStr 35
}

bow compositeBow {
	weight 1.3
	value 500
	mesh "luk_kompozytowy.qmsh"
	attack 85
	speed 45
	reqStr 40
}

bow elvenBow {
	weight 1.1
	value 3000
	mesh "luk_elfi.qmsh"
	attack 125
	reqStr 35
	speed 50
	flags hq
}

bow dragonBow {
	weight 1.5
	value 8000
	mesh "luk_smoczy.qmsh"
	attack 170
	reqStr 50
	speed 50
	flags magical
}

bow angelBow {
	weight 0.9
	value 30000
	mesh "luk_anielski.qmsh"
	attack 220
	reqStr 25
	speed 60
	flags {notShop notRandom unique}
	effects {
		magicPower 4
	}
}

bow qGoblinsBow {
	weight 1.3
	value 100
	mesh "luk_stary.qmsh"
	attack 40
	reqStr 45
	speed 45
	flags {notShop notRandom dontDrop important}
}

//------------------------------------------------------------------------------
// SHIELDS
//------------------------------------------------------------------------------
shield plankShield {
	weight 1.5
	value 5
	mesh "shield_plank.qmsh"
	block 10
	reqStr 25
	material wood
}

shield woodenShield {
	weight 2
	value 25
	mesh "drewniana_tarcza.qmsh"
	block 30
	reqStr 30
	material wood
}

shield kiteShield {
	weight 3
	value 100
	mesh "kite_shield.qmsh"
	block 50
	reqStr 40
	material wood
}

shield ironShield {
	weight 2.5
	value 250
	mesh "iron_shield.qmsh"
	block 70
	reqStr 35
	material metal
}

shield steelShield {
	weight 4
	value 1000
	mesh "kite_shield_steel.qmsh"
	block 100
	reqStr 50
	material metal
}

shield mithrilShield {
	weight 1.2
	value 3000
	mesh "mith_shield.qmsh"
	block 130
	reqStr 20
	material metal
	flags hq
}

shield spikedShield {
	weight 5
	value 4000
	mesh "spiked_shield.qmsh"
	block 140
	attackMod 1
	reqStr 60
	material metal
	flags hq
}

shield adamantineShield {
	weight 4.5
	value 7500
	mesh "adam_shield.qmsh"
	block 160
	reqStr 55
	material metal
	flags magical
	effects {
		magicResistance 0.1
	}
}

shield wallShield {
	weight 10
	value 25000
	mesh "shield_wall.qmsh"
	block 200
	attackMod 0.6
	reqStr 75
	material rock
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.25
	}
}

shield deathShield {
	weight 4.5
	value 25000
	mesh "shield_death.qmsh"
	block 200
	attackMod 0.6
	reqStr 55
	material rock
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.25
	}
}

//------------------------------------------------------------------------------
// ARMORS
//------------------------------------------------------------------------------
armor paddedArmor {
	weight 4.5
	value 10
	mesh "padded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 5
	reqStr 25
	mobility 90
}

armor paddedArmorHq {
	weight 4.5
	value 20
	mesh "padded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 15
	reqStr 25
	mobility 95
	flags hq
}

armor paddedArmorM {
	weight 4
	value 75
	mesh "padded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 35
	reqStr 25
	mobility 95
	flags magical
}

armor leatherArmor {
	weight 7
	value 15
	mesh "leather_armor.qmsh"
	type light
	unitType human
	material skin
	defense 15
	reqStr 30
	mobility 85
}

armor leatherArmorHq {
	weight 7
	value 30
	mesh "leather_armor.qmsh"
	type light
	unitType human
	material skin
	defense 25
	reqStr 30
	mobility 90
	flags hq
}

armor leatherArmorM {
	weight 6
	value 120
	mesh "leather_armor.qmsh"
	type light
	unitType human
	material skin
	defense 45
	reqStr 30
	mobility 90
	flags magical
}

armor dragonskinArmor {
	weight 8
	value 15000
	mesh "dragonskin.qmsh"
	type light
	unitType human
	material skin
	defense 165
	reqStr 35
	mobility 80
	flags magical
	effects {
		magicResistance 0.1
	}
}

armor studdedArmor {
	weight 9
	value 100
	mesh "studded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 40
	reqStr 35
	mobility 80
}

armor studdedArmorHq {
	weight 9
	value 150
	mesh "studded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 50
	reqStr 35
	mobility 85
	flags hq
}

armor studdedArmorM {
	weight 8
	value 500
	mesh "studded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 70
	reqStr 35
	mobility 85
	flags magical
}

armor shadowArmor {
	weight 7
	value 12000
	mesh "studded_armor.qmsh"
	type light
	unitType human
	material skin
	defense 100
	reqStr 30
	mobility 85
	flags {notShop notRandom unique}
	effects {
		backstab 0.1
	}
}

armor chainShirt {
	weight 11.5
	value 1000
	mesh "chain_shirt.qmsh"
	type light
	unitType human
	material metal
	defense 90
	reqStr 40
	mobility 75
}

armor chainShirtHq {
	weight 11.5
	value 1500
	mesh "chain_shirt.qmsh"
	type light
	unitType human
	material metal
	defense 100
	reqStr 40
	mobility 80
	flags hq
}

armor chainShirtM {
	weight 10
	value 3000
	mesh "chain_shirt.qmsh"
	type light
	unitType human
	material metal
	defense 120
	reqStr 40
	mobility 80
	flags magical
}

armor mithrilChainShirt {
	weight 5.5
	value 5000
	mesh "chain_shirt.qmsh"
	texOverride "chain_shirt_mith.jpg"
	type light
	unitType human
	material metal
	defense 135
	reqStr 30
	mobility 90
	flags magical
}

armor angelskinArmor {
	weight 3
	value 25000
	mesh "angelskin.qmsh"
	type light
	unitType human
	material metal
	defense 180
	reqStr 20
	mobility 100
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.25
		regeneration 5
	}
}

armor hideArmor {
	weight 11.5
	value 10
	mesh "hide_armor.qmsh"
	type medium
	unitType human
	material skin
	defense 10
	reqStr 40
	mobility 75
}

armor hideArmorHq {
	weight 11.5
	value 15
	mesh "hide_armor.qmsh"
	type medium
	unitType human
	material skin
	defense 20
	reqStr 40
	mobility 80
	flags hq
}

armor hideArmorM {
	weight 10
	value 50
	mesh "hide_armor.qmsh"
	type medium
	unitType human
	material skin
	defense 40
	reqStr 40
	mobility 80
	flags magical
}

armor trollHideArmor {
	weight 12.5
	value 2000
	mesh "hide_armor.qmsh"
	texOverride "troll_hide_armor.jpg"
	type medium
	unitType human
	material skin
	defense 60
	reqStr 45
	mobility 75
	flags magical
	effects {
		regeneration 5
	}
}

armor chainmail {
	weight 18
	value 50
	mesh "chainmail.qmsh"
	type medium
	unitType human
	material metal
	defense 20
	reqStr 50
	mobility 60
}

armor chainmailHq {
	weight 18
	value 150
	mesh "chainmail.qmsh"
	type medium
	unitType human
	material metal
	defense 30
	reqStr 50
	mobility 65
	flags hq
}

armor chainmailM {
	weight 16
	value 250
	mesh "chainmail.qmsh"
	type medium
	unitType human
	material metal
	defense 50
	reqStr 50
	mobility 65
	flags magical
}

armor mithrilChainmail {
	weight 9
	value 250
	mesh "chainmail.qmsh"
	texOverride "chainmail_mith.jpg"
	type medium
	unitType human
	material metal
	defense 70
	reqStr 35
	mobility 75
	flags magical
}

armor scaleArmor {
	weight 15
	value 100
	mesh "scale_armor.qmsh"
	type medium
	unitType human
	material metal
	defense 50
	reqStr 50
	mobility 60
}

armor scaleArmorHq {
	weight 15
	value 250
	mesh "scale_armor.qmsh"
	type medium
	unitType human
	material metal
	defense 60
	reqStr 50
	mobility 65
	flags hq
}

armor scaleArmorM {
	weight 13.5
	value 500
	mesh "scale_armor.qmsh"
	type medium
	unitType human
	material metal
	defense 80
	reqStr 45
	mobility 65
	flags magical
}

armor dragonscaleArmor {
	weight 16.5
	value 15000
	mesh "scale_armor.qmsh"
	texOverride "dragonscale.jpg"
	type medium
	unitType human
	material metal
	defense 180
	reqStr 50
	mobility 55
	flags magical
	effects {
		magicResistance 0.1
	}
}

armor breastplate {
	weight 13.5
	value 1000
	mesh "breastplate.qmsh"
	type medium
	unitType human
	material metal
	defense 100
	reqStr 45
	mobility 70
}

armor breastplateHq {
	weight 13.5
	value 1500
	mesh "breastplate.qmsh"
	type medium
	unitType human
	material metal
	defense 110
	reqStr 45
	mobility 75
	flags hq
}

armor breastplateM {
	weight 12
	value 3000
	mesh "breastplate.qmsh"
	type medium
	unitType human
	material metal
	defense 130
	reqStr 40
	mobility 75
	flags magical
}

armor mithrilBreastplate {
	weight 6.5
	value 5000
	mesh "breastplate.qmsh"
	texOverride "breastplate_mith.jpg"
	type medium
	unitType human
	material metal
	defense 150
	reqStr 30
	mobility 85
	flags magical
}

armor adamantineBreastplate {
	weight 16
	value 10000
	mesh "breastplate.qmsh"
	texOverride "breastplate_adam.jpg"
	type medium
	unitType human
	material metal
	defense 170
	reqStr 50
	mobility 70
	flags magical
	effects {
		magicResistance 0.1
	}
}

armor gladiatorArmor {
	weight 13.5
	value 25000
	mesh "gladiator_armor.qmsh"
	type medium
	unitType human
	material metal
	defense 200
	reqStr 45
	mobility 75
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.1
		meleeAttack 25
	}
}

armor rustedSplitArmor {
	weight 18
	value 75
	mesh "splint_armor.qmsh"
	texOverride "splint_armor_rusted.jpg"
	type heavy
	unitType human
	material metal
	defense 25
	reqStr 50
	mobility 50
}

armor splintArmor {
	weight 18
	value 150
	mesh "splint_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 55
	reqStr 50
	mobility 50
}

armor splintArmorHq {
	weight 18
	value 225
	mesh "splint_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 65
	reqStr 50
	mobility 55
	flags hq
}

armor splintArmorM {
	weight 16
	value 600
	mesh "splint_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 85
	reqStr 50
	mobility 55
	flags magical
}

armor mithrilSplintArmor {
	weight 9
	value 1200
	mesh "splint_armor.qmsh"
	texOverride "splint_armor_mith.jpg"
	type heavy
	unitType human
	material metal
	defense 110
	reqStr 35
	mobility 65
	flags magical
}

armor antimageArmor {
	weight 20
	value 18000
	mesh "splint_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 130
	reqStr 55
	mobility 55
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.33
	}
}

armor plateArmor {
	weight 25
	value 1500
	mesh "plate_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 110
	reqStr 70
	mobility 40
}

armor plateArmorHq {
	weight 25
	value 2000
	mesh "plate_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 120
	reqStr 70
	mobility 45
	flags hq
}

armor plateArmorM {
	weight 25
	value 4000
	mesh "plate_armor.qmsh"
	type heavy
	unitType human
	material metal
	defense 140
	reqStr 65
	mobility 45
	flags magical
}

armor mithrilPlateArmor {
	weight 12.5
	value 6500
	mesh "plate_armor.qmsh"
	texOverride "plate_armor_mith.jpg"
	type heavy
	unitType human
	material metal
	defense 165
	reqStr 70
	mobility 55
	flags magical
}

armor adamantinePlateArmor {
	weight 30
	value 12000
	mesh "plate_armor.qmsh"
	texOverride "plate_armor_adam.jpg"
	type heavy
	unitType human
	material metal
	defense 185
	reqStr 40
	mobility 40
	flags magical
	effects {
		magicResistance 0.1
	}
}

armor blackArmor {
	weight 30
	value 30000
	mesh "plate_armor.qmsh"
	texOverride "black_armor.jpg"
	type heavy
	unitType human
	material metal
	defense 220
	reqStr 75
	mobility 40
	flags {notShop notRandom unique}
	effects {
		magicResistance 0.25
	}
}

armor crystalArmor {
	weight 35
	value 6000
	mesh "crystal_armor.qmsh"
	type heavy
	unitType human
	material crystal
	defense 165
	reqStr 80
	mobility 25
	flags hq
}

armor crystalArmorM {
	weight 35
	value 16000
	mesh "crystal_armor.qmsh"
	type heavy
	unitType human
	material crystal
	defense 195
	reqStr 80
	mobility 25
	flags magical
	effects {
		magicResistance 0.1
	}
}

armor bloodCrystalArmor {
	weight 35
	value 24000
	mesh "crystal_armor.qmsh"
	type heavy
	unitType human
	material crystal
	defense 210
	reqStr 80
	mobility 25
	flags {notShop notRandom magical}
	effects {
		magicResistance 0.1
	}
}

armor blacksmithClothes {
	weight 2
	value 50
	mesh "blacksmith_clothes.qmsh"
	type light
	unitType human
	material skin
	defense 35
	reqStr 30
	mobility 85
	flags notBlacksmith
}

armor innkeeperClothes {
	weight 1.5
	value 50
	mesh "innkeeper_clothes.qmsh"
	type light
	unitType human
	material skin
	defense 15
	reqStr 20
	mobility 85
	flags notBlacksmith
}

armor goblinArmor {
	weight 4
	value 10
	mesh "goblin_armor.qmsh"
	type light
	unitType goblin
	material skin
	defense 20
	reqStr 20
	mobility 90
	flags notShop
}

armor orcLeatherArmor {
	weight 9
	value 15
	mesh "orc_armor.qmsh"
	type light
	unitType orc
	material skin
	defense 25
	reqStr 40
	mobility 85
	flags notShop
}

armor orcShamanArmor {
	weight 9
	value 100
	aiValue 50
	mesh "orc_shaman_armor.qmsh"
	type light
	unitType orc
	material skin
	defense 20
	reqStr 50
	mobility 85
	flags {notShop mage magical}
	effects {
		magicPower 1
	}
}

armor orcChainmail {
	weight 22
	value 50
	mesh "orc_chainmail.qmsh"
	type medium
	unitType orc
	material metal
	defense 50
	reqStr 60
	mobility 60
	flags notShop
}

armor noviceRobe {
	weight 1.5
	value 50
	aiValue 100
	mesh "robe.qmsh"
	type light
	unitType human
	material cloth
	defense 20
	reqStr 20
	mobility 90
	flags {notShop mage magical}
}

armor mageRobe {
	weight 1.5
	value 150
	aiValue 200
	mesh "robe.qmsh"
	texOverride "robe2.jpg"
	type light
	unitType human
	material cloth
	defense 30
	reqStr 20
	mobility 90
	flags {notShop mage magical}
	effects {
		magicPower 1
		mana 100
		manaRegeneration 0.1
		magicResistance 0.1
	}
}

armor battleMageRobe {
	weight 1.5
	value 1000
	aiValue 300
	mesh "robe.qmsh"
	texOverride "robe3.jpg"
	type light
	unitType human
	material cloth
	defense 40
	reqStr 20
	mobility 90
	flags {notShop mage magical}
	effects {
		magicPower 2
		mana 200
		manaRegeneration 0.2
		magicResistance 0.1
	}
}

armor archmageRobe {
	weight 1.5
	value 3500
	aiValue 400
	mesh "robe.qmsh"
	texOverride "robe4.jpg"
	type light
	unitType human
	material cloth
	defense 50
	reqStr 20
	mobility 90
	flags {notShop mage unique}
	effects {
		magicPower 3
		mana 300
		manaRegeneration 0.3
		magicResistance 0.25
	}
}

armor necromancerRobe {
	weight 2
	value 100
	aiValue 250
	mesh "necromancer_robe.qmsh"
	type light
	unitType human
	material cloth
	defense 50
	reqStr 25
	mobility 80
	flags {notShop magical}
	effects {
		magicPower 2
		magicResistance 0.1
	}
}

armor clothes {
	weight 1
	value 5
	mesh "clothes.qmsh"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 100
	flags notBlacksmith
}

armor clothes2 {
	weight 1
	value 15
	mesh "clothes2.qmsh"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 100
	flags notBlacksmith
}

armor clothes2b {
	weight 1
	value 15
	mesh "clothes2.qmsh"
	texOverride "clothes2b.jpg"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 100
	flags notBlacksmith
}

armor clothes3 {
	weight 1
	value 100
	mesh "clothes3.qmsh"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 100
	flags {notBlacksmith hq}
}

armor clothes3b {
	weight 1
	value 100
	mesh "clothes3.qmsh"
	texOverride "clothes3b.jpg"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 100
	flags {notBlacksmith hq}
}

armor oldRobe {
	weight 1.5
	value 5
	mesh "robe.qmsh"
	texOverride "whiteRobe.jpg"
	type light
	unitType human
	material cloth
	defense 5
	reqStr 20
	mobility 90
	flags notShop
}

//------------------------------------------------------------------------------
// AMULETS
//------------------------------------------------------------------------------
amulet amuletSilver {
	weight 0.1
	value 75
	tex "amulet_silver.png"
}

amulet amuletGold {
	weight 0.1
	value 150
	tex "amulet_golden.png"
}

amulet amuletRuby {
	weight 0.1
	value 300
	tex "amulet_ruby.png"
}

amulet amuletDiamond {
	weight 0.1
	value 600
	tex "amulet_diamond.png"
}

amulet amuletGourmet : amuletSilver {
	value 750
	aiValue 90
	flags magical
	effects {
		naturalHealingMod 1.5
	}
}

amulet amuletSprinter : amuletSilver {
	value 750
	aiValue 90
	flags magical
	effects {
		mobility 25
	}
	tag dex
}

amulet amuletMage : amuletGold {
	value 1500
	aiValue 120
	flags magical
	effects {
		magicPower 5
	}
	tag mage
}

amulet amuletDefense : amuletGold {
	value 1500
	aiValue 120
	flags magical
	effects {
		defense 50
	}
	tag def
}

amulet amuletStamina : amuletGold {
	value 1500
	aiValue 120
	flags magical
	effects {
		stamina 100
		staminaRegenerationMod 1.25
	}
	tag stamina
}

amulet amuletMana : amuletGold {
	value 1500
	aiValue 120
	flags magical
	effects {
		mana 150
		manaRegeneration 0.5
	}
	tag mana
}

amulet amuletWarrior : amuletRuby {
	value 3000
	aiValue 150
	flags magical
	effects {
		attribute str 10
		meleeAttack 50
		skill oneHandedWeapon 20
	}
	tag {melee str}
}

amulet amuletArcher : amuletRuby {
	value 3000
	aiValue 150
	flags magical
	effects {
		attribute dex 10
		rangedAttack 50
		skill bow 20
	}
	tag {ranged dex}
}

amulet amuletAntimagic : amuletRuby {
	value 3000
	aiValue 180
	flags magical
	effects {
		magicResistance 0.25
	}
	tag def
}

amulet amuletHealth : amuletDiamond {
	value 6000
	aiValue 180
	flags magical
	effects {
		health 250
		attribute end 10
		regeneration 10
		poisonResistance 0.25
	}
	tag def
}

//------------------------------------------------------------------------------
// RINGS
//------------------------------------------------------------------------------
ring ringSilver {
	weight 0.1
	value 25
	tex "ring_silver.png"
}

ring ringGold {
	weight 0.1
	value 50
	tex "ring_gold.png"
}

ring ringEmerald {
	weight 0.1
	value 150
	tex "ring_emerald.png"
}

ring ringStrength : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute str 5
	}
	tag str
}

ring ringEndurance : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute end 5
	}
	tag def
}

ring ringDexterity : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute dex 5
	}
	tag dex
}

ring ringIntelligence : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute int 5
	}
	tag mage
}

ring ringWisdom : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute wis 5
	}
}

ring ringCharisma : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		attribute cha 5
	}
	tag cleric
}

ring ringHealth : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		health 100
	}
	tag def
}

ring ringStamina : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		stamina 50
	}
	tag stamina
}

ring ringDefense : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		defense 15
	}
	tag def
}

ring ringAttack : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		meleeAttack 15
	}
	tag melee
}

ring ringRangedAttack : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		rangedAttack 15
	}
	tag ranged
}

ring ringMage : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		magicPower 2
	}
	tag mage
}

ring ringOneHandedWeapon : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill oneHandedWeapon 10
	}
	tag melee
}

ring ringShortBlade : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill shortBlade 10
	}
	tag melee
}

ring ringLongBlade : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill longBlade 10
	}
	tag melee
}

ring ringAxe : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill axe 10
	}
	tag melee
}

ring ringBlunt : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill blunt 10
	}
	tag melee
}

ring ringBow : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill bow 10
	}
	tag ranged
}

ring ringShield : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill shield 10
	}
	tag def
}

ring ringLightArmor : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill lightArmor 10
	}
	tag def
}

ring ringMediumArmor : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill mediumArmor 10
	}
	tag def
}

ring ringHeavyArmor : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill heavyArmor 10
	}
	tag def
}

ring ringPersuasion : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill persuasion 10
	}
}

ring ringCarry : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		carry 1.5
	}
}

ring ringGodsMagic : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill godsMagic 10
	}
	tag cleric
}

ring ringConcentration : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill concentration 10
	}
	tag mana
}

ring ringMysticMagic : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		skill mysticMagic 10
	}
	tag mage
}

ring ringMana : ringGold {
	value 500
	aiValue 80
	flags magical
	effects {
		mana 100
	}
	tag mana
}

ring ringStrength2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute str 15
	}
	tag str
}

ring ringEndurance2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute end 15
	}
	tag def
}

ring ringDexterity2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute dex 15
	}
	tag dex
}

ring ringIntelligence2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute int 15
	}
	tag mage
}

ring ringWisdom2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute wis 15
	}
}

ring ringCharisma2 : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		attribute cha 15
	}
	tag cleric
}

ring ringRegeneration : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		regeneration 5
	}
	tag def
}

ring ringAssassin : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		backstab 0.25
	}
	tag melee
}

ring ringPoisonResistance : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		poisonResistance 0.5
	}
	tag def
}

ring ringManaRegeneration : ringEmerald {
	value 1500
	aiValue 110
	flags magical
	effects {
		manaRegeneration 1
	}
	tag mana
}

//------------------------------------------------------------------------------
// CONSUMABLES
//------------------------------------------------------------------------------
consumable potionNatural {
	weight 0.2
	value 10
	mesh "natural_pot.qmsh"
	type potion
	time 10
	flags groundMesh
	effects {
		naturalHealingMod 2
	}
}

consumable potionNatural2 {
	weight 0.2
	value 100
	mesh "natural_pot2.qmsh"
	type potion
	time 30
	flags groundMesh
	effects {
		naturalHealingMod 2.5
	}
}

consumable potionHealth {
	weight 0.1
	value 25
	mesh "hp_pot.qmsh"
	type potion
	flags groundMesh
	effects {
		heal 250
	}
}

consumable potionHealth2 {
	weight 0.1
	value 100
	mesh "hp_pot2.qmsh"
	type potion
	flags groundMesh
	effects {
		heal 500
	}
}

consumable potionHealth3 {
	weight 0.1
	value 400
	mesh "hp_pot3.qmsh"
	type potion
	flags groundMesh
	effects {
		heal 1000
	}
}

consumable potionMana {
	weight 0.1
	value 25
	mesh "mp_pot.qmsh"
	type potion
	flags groundMesh
	effects {
		restoreMana 250
	}
}

consumable potionMana2 {
	weight 0.1
	value 100
	mesh "mp_pot2.qmsh"
	type potion
	flags groundMesh
	effects {
		restoreMana 500
	}
}

consumable potionMana3 {
	weight 0.1
	value 400
	mesh "mp_pot3.qmsh"
	type potion
	flags groundMesh
	effects {
		restoreMana 1000
	}
}

consumable potionRegeneration {
	weight 0.1
	value 250
	mesh "misc_pot.qmsh"
	type potion
	time 360
	flags groundMesh
	effects {
		regeneration 5
	}
}

consumable potionAntidote {
	weight 0.1
	value 50
	mesh "antidote.qmsh"
	type potion
	time 30
	flags groundMesh
	effects {
		antidote 0
		poisonResistance 0.5
	}
}

consumable potionAntimagic {
	weight 0.2
	value 200
	mesh "misc_pot.qmsh"
	type potion
	time 300
	flags groundMesh
	effects {
		magicResistance 0.5
	}
}

consumable potionStrength {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {notShop notRandom groundMesh magical}
	effects {
		attribute str 1
	}
}

consumable potionEndurance {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {notShop notRandom groundMesh magical}
	effects {
		attribute end 1
	}
}

consumable potionDexterity {
	weight 0.4
	value 500
	mesh "gray_potion.qmsh"
	type potion
	flags {notShop notRandom groundMesh magical}
	effects {
		attribute dex 1
	}
}

consumable qMagesPotion {
	weight 0.1
	value 150
	mesh "antidote.qmsh"
	type potion
	flags {notShop notRandom groundMesh hq}
}

consumable water {
	weight 0.4
	value 1
	mesh "water.qmsh"
	type drink
	time 10
	flags groundMesh
	effects {
		staminaRegeneration 20
	}
}

consumable springWater {
	weight 0.4
	value 10
	mesh "water.qmsh"
	type drink
	time 30
	flags {groundMesh hq}
	effects {
		staminaRegeneration 30
	}
}

consumable beer {
	weight 0.5
	value 2
	mesh "piwo.qmsh"
	type drink
	time 2
	flags groundMesh
	effects {
		alcohol 75
	}
}

consumable vodka {
	weight 0.4
	value 10
	mesh "vodka.qmsh"
	type drink
	time 2
	flags groundMesh
	effects {
		alcohol 150
	}
}

consumable spirit {
	weight 0.4
	value 20
	mesh "vodka.qmsh"
	type drink
	time 2
	flags {groundMesh hq}
	effects {
		alcohol 300
	}
}

consumable bread {
	weight 0.8
	value 5
	mesh "chleb.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 40
	}
}

consumable meat {
	weight 0.5
	value 10
	mesh "mieso.qmsh"
	type food
	flags {notMerchant groundMesh}
	time 5
	effects {
		foodRegeneration 50
	}
}

consumable rawMeat {
	weight 0.5
	value 5
	mesh "surowe_mieso.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 20
	}
}

consumable sausage {
	weight 0.5
	value 15
	mesh "sausage.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 60
	}
}

consumable fishMeat {
	weight 0.5
	value 7
	mesh "fish_meat.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 40
	}
}

consumable fish {
	weight 1.5
	value 4
	mesh "fish.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 15
	}
}

consumable apple {
	weight 0.1
	value 3
	mesh "jablko.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 25
	}
}

consumable cheese {
	weight 0.5
	value 8
	mesh "ser.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 40
	}
}

consumable honeycomb {
	weight 0.2
	value 15
	mesh "plaster_miodu.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 75
	}
}

consumable rice {
	weight 0.5
	value 5
	mesh "ryz.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 30
	}
}

consumable soup {
	weight 0.3
	value 8
	mesh "soup.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 45
	}
}

consumable stew {
	weight 0.3
	value 14
	mesh "stew.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 60
	}
}

consumable mushroom {
	weight 0.2
	value 4
	mesh "grzyb.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 15
	}
}

consumable muffin {
	weight 0.2
	value 20
	mesh "muffin.qmsh"
	type food
	time 5
	flags {notMerchant groundMesh}
	effects {
		foodRegeneration 100
	}
}

consumable healingHerb {
	weight 0.2
	value 10
	mesh "healing_herb.qmsh"
	type herb
	flags {groundMesh ingredient}
	effects {
		heal 150
	}
}

consumable manaHerb {
	weight 0.2
	value 10
	mesh "mana_herb.qmsh"
	type herb
	flags {groundMesh ingredient}
	effects {
		restoreMana 150
	}
}

consumable greenHerb {
	weight 0.2
	value 50
	mesh "green_herb.qmsh"
	type herb
	flags {notMerchant groundMesh}
	effects {
		greenHair 0
	}
}

consumable alchemistHerb {
	weight 0.2
	value 25
	mesh "woddruff_herb.qmsh"
	type herb
	flags {notShop notRandom groundMesh}
}

//------------------------------------------------------------------------------
// OTHER
//------------------------------------------------------------------------------
other emerald {
	weight 0.1
	value 250
	tex "szmaragd.png"
	type valuable
	flags crystalSound
}

other ruby {
	weight 0.1
	value 500
	tex "rubin.png"
	type valuable
	flags crystalSound
}

other diamond {
	weight 0.1
	value 750
	tex "diament.png"
	type valuable
	flags crystalSound
}

other krystal {
	weight 0.1
	value 1000
	tex "krystal.png"
	type valuable
	flags {notShop crystalSound}
}

other goldenBar {
	weight 6
	value 600
	mesh "golden_bar.qmsh"
	type valuable
	flags groundMesh
}

other goldenCup {
	weight 0.5
	value 300
	mesh "golden_cup.qmsh"
	type valuable
	flags groundMesh
}

other ladle {
	weight 0.5
	value 5
	mesh "chochla.qmsh"
	type tool
}

other cup {
	weight 0.2
	value 3
	mesh "cup.qmsh"
	flags groundMesh
}

other plate {
	weight 0.2
	value 3
	mesh "plate.qmsh"
	flags groundMesh
}

other wolfPelt {
	weight 2.5
	value 50
	tex "wolf_pelt.png"
}

other worgPelt {
	weight 2.5
	value 100
	tex "worg_pelt.png"
}

other direWolfPelt {
	weight 5
	value 2000
	tex "dire_wolf_pelt.png"
}

other bearPelt {
	weight 4
	value 150
	tex "bear_pelt.png"
}

other blackBearPelt {
	weight 4
	value 200
	tex "black_bear_pelt.png"
}

other healCrystal {
	weight 0.5
	value 25
	mesh "heal_crystal.qmsh"
	type ingredient
	flags {groundMesh ingredient}
}

other magicCrystal {
	weight 0.5
	value 25
	mesh "magic_crystal.qmsh"
	type ingredient
	flags {groundMesh ingredient}
}

other tallow {
	weight 0.5
	value 10
	mesh "tallow.qmsh"
	type ingredient
	flags {groundMesh ingredient}
}

other trollBlood {
	weight 0.1
	value 50
	mesh "vial.qmsh"
	type ingredient
	flags ingredient
}

//------------------------------------------------------------------------------
// QUEST ITEMS
//------------------------------------------------------------------------------
other ancientAmulet {
	weight 0.1
	value 100
	tex "a_amulet.png"
	flags {quest notShop notRandom important}
}

other ancientAmulet2 {
	weight 0.1
	value 100
	tex "a_amulet2.png"
	flags {quest notShop notRandom important}
}

other ancientAmulet3 {
	weight 0.1
	value 100
	tex "a_amulet3.png"
	flags {quest notShop notRandom important}
}

other ancientBrooch {
	weight 0.1
	value 100
	tex "a_brosza.png"
	flags {quest notShop notRandom important}
}

other ancientFlask {
	weight 0.5
	value 50
	tex "a_butelka.png"
	flags {quest notShop notRandom important}
}

other ancientArtifact {
	weight 0.5
	value 50
	tex "a_cos.png"
	flags {quest notShop notRandom important}
}

other ancientSkull {
	weight 1
	value 50
	tex "a_czaszka.png"
	flags {quest notShop notRandom important}
}

other ancientFigurine {
	weight 0.2
	value 100
	tex "a_figurka.png"
	flags {quest notShop notRandom important}
}

other ancientFigurine2 {
	weight 0.2
	value 100
	tex "a_figurka2.png"
	flags {quest notShop notRandom important}
}

other ancientFigurine3 {
	weight 0.2
	value 100
	tex "a_figurka3.png"
	flags {quest notShop notRandom important}
}

other ancientBook {
	weight 0.5
	value 50
	tex "a_ksiega.png"
	flags {quest notShop notRandom important}
}

other ancientMask {
	weight 0.5
	value 100
	tex "a_maska.png"
	flags {quest notShop notRandom important}
}

other ancientMask2 {
	weight 0.5
	value 100
	tex "a_maska2.png"
	flags {quest notShop notRandom important}
}

other ancientBowl {
	weight 0.5
	value 50
	tex "a_misa.png"
	flags {quest notShop notRandom important}
}

other ancientCoin {
	weight 0.1
	value 50
	tex "a_moneta.png"
	flags {quest notShop notRandom important}
}

other ancientRing {
	weight 0.1
	value 100
	tex "a_pierscien.png"
	flags {quest notShop notRandom important}
}

other ancientRing2 {
	weight 0.1
	value 100
	tex "a_pierscien2.png"
	flags {quest notShop notRandom important}
}

other ancientRing3 {
	weight 0.1
	value 100
	tex "a_pierscien3.png"
	flags {quest notShop notRandom important}
}

other ancientTalisman {
	weight 0.1
	value 75
	tex "a_talizman.png"
	flags {quest notShop notRandom important}
}

other ancientTalisman2 {
	weight 0.1
	value 75
	tex "a_talizman2.png"
	flags {quest notShop notRandom important}
}

other qMineKey {
	weight 0.1
	value 0
	tex "old-key.png"
	flags {notShop notRandom important}
}

other qBanditsParcel {
	weight 5
	value 0
	tex "paczka.png"
	flags {notShop notRandom important dontDrop}
}

other qBanditsLetter {
	weight 0.1
	value 0
	tex "list.png"
	flags {notShop notRandom important}
}

other qMagesBall {
	weight 1
	value 0
	tex "magic_sphere.png"
	flags {notShop notRandom important}
}

other qMagesBall2 {
	weight 1
	value 5000
	tex "magic_sphere.png"
	flags {notShop notRandom}
}

other qOrcsKey {
	weight 0.1
	value 0
	tex "rusty-key.png"
	flags {notShop notRandom important}
}

other qCraziesStone {
	weight 5
	value 0
	tex "kamien2.png"
	flags {notShop notRandom important notTeam}
}

other qSecretNote {
	weight 0.1
	value 0
	tex "piece_of_paper.png"
	flags {notShop notRandom}
}

other qSecretNote2 {
	weight 0.1
	value 0
	tex "piece_of_paper.png"
	flags {notShop notRandom}
}

other letter {
	weight 0.1
	value 0
	tex "list.png"
	flags {quest notShop notRandom dontDrop}
}

other parcel {
	weight 1
	value 0
	tex "paczka.png"
	flags {quest notShop notRandom important dontDrop}
}

other wantedPoster {
	weight 0.1
	value 0
	tex "wanted.png"
	flags {quest notShop notRandom}
}

other qResources {
	weight 10
	value 0
	mesh "resources_box.qmsh"
	flags {quest notShop notRandom important dontDrop groundMesh}
}

other qInfectedOrgan {
	weight 0.3
	value 0
	tex "infectedOrgan.png"
	flags {notShop notRandom meatSound}
}

other qYellowCrystal {
	weight 0.1
	value 100
	tex "yellowCrystal.png"
	type valuable
	flags {notShop notRandom crystalSound}
}

other qYellowHerbs {
	weight 0.1
	value 100
	tex "yellowHerbs.png"
	flags {notShop notRandom}
}

//------------------------------------------------------------------------------
// BOOKS
//------------------------------------------------------------------------------
bookScheme book {
	texture "book.png"
	// assuming 1024x768 resolution, this values are scaled
	size {800 600}
	regions {
		{50 17 390 505}
		{405 17 745 505}
	}
	prev {42 497}
	next {737 497}
}

bookScheme page {
	texture "page.jpg"
	size {437 566}
	regions {
		{50 50 387 496}
	}
	prev {30 536}
	next {407 536}
}

book bookHistory {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags groundMesh
}

book bookOrcs {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags groundMesh
}

book bookUndead {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags groundMesh
}

book bookBehindTheWall {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags groundMesh
}

book bookAdventurer {
	weight 0.2
	value 10
	mesh "book.qmsh"
	scheme book
	flags groundMesh
}

book bookLucidDream {
	weight 0.2
	value 100
	mesh "book.qmsh"
	scheme book
	flags {notShop notRandom groundMesh}
}

book bookRunic {
	weight 0.2
	value 100
	mesh "book.qmsh"
	scheme book
	flags {notShop notRandom groundMesh}
	runic 1
}

book qEvilBook {
	weight 1
	value 100
	tex "summoning.png"
	scheme book
	flags {notShop notRandom}
	runic 1
}

book magicScroll {
	weight 0.1
	value 100
	mesh "scroll.qmsh"
	scheme book
	flags {notShop notRandom magicScroll magical}
}

book qClericBook {
	weight 1
	value 100
	mesh "book.qmsh"
	scheme book
	flags {notShop notRandom groundMesh important}
	runic 1
}

book qSoltysJournal {
	weight 0.2
	value 0
	mesh "book.qmsh"
	scheme book
	flags {notShop notRandom groundMesh important}
}

book cryptNote {
	weight 0.1
	value 0
	scheme page
	tex "piece_of_paper.png"
	flags {notShop notRandom}
}

book recipeAntidote {
	weight 0.1
	value 200
	mesh "recipe.qmsh"
	scheme page
	recipes potionAntidote
	type recipe
	flags singleUse
}

book recipeRegeneration {
	weight 0.1
	value 500
	mesh "recipe.qmsh"
	scheme page
	recipes potionRegeneration
	type recipe
	flags singleUse
}

book recipeAntimagic {
	weight 0.1
	value 1000
	mesh "recipe.qmsh"
	scheme page
	recipes potionAntimagic
	type recipe
	flags singleUse
}

book recipeBookNatural {
	weight 1
	value 250
	mesh "book.qmsh"
	scheme book
	recipes {
		potionNatural
		potionNatural2
	}
	type recipe
	flags {groundMesh hq}
}

//------------------------------------------------------------------------------
// GOLD
//------------------------------------------------------------------------------
gold gold {
	weight 0
	value 1
	tex "goldstack.png"
}

//------------------------------------------------------------------------------
// LISTS
//------------------------------------------------------------------------------
// base items, weapon is given for rised units that have no weapon, heroes will
// buy items from this list if they have empty slot
// should contain single item of each type(weapon, mage weapon, bow, shield,
// armor, mage armor)
list baseItems {
	knife
	woodenSword
	rustedHatchet
	club
	noviceWand
	shortBow
	plankShield
	noviceRobe
	paddedArmor
	hideArmor
	rustedSplitArmor
}

list normalFood {
	bread
	meat
	apple
	cheese
	honeycomb
	rice
	sausage
	fishMeat
	soup
	stew
	muffin
}

list orcFood {
	bread
	meat
	rawMeat
	mushroom
	fish
}

list foodAndDrink {
	bread
	meat
	apple
	cheese
	honeycomb
	rice
	rawMeat
	sausage
	fishMeat
	soup
	stew
	muffin
	fish
	water
	beer
	vodka
	spirit
}

list drink priority {
	2 beer
	vodka
}

list ancientArmoryArmors {
	dragonskinArmor
	mithrilChainShirt
	mithrilChainmail
	mithrilBreastplate
	adamantineBreastplate
	mithrilSplintArmor
	mithrilPlateArmor
	adamantinePlateArmor
	crystalArmor
	crystalArmorM
}

list contestReward {
	potionStrength
	potionEndurance
	potionDexterity
}

list treasure {
	emerald
	ruby
	diamond
	goldenBar
	goldenCup
}

list books {
	bookHistory
	bookOrcs
	bookUndead
	bookAdventurer
	bookBehindTheWall
}

list rareBooks {
	bookLucidDream
	bookRunic
}

list shortBlade leveled {
	knife 1
	dagger 2
	shortSword 5
	rapier 7
	cutlass 10
	assassinDagger 13
	shortAdamantineSword 16
}

list longBlade leveled {
	woodenSword 1
	longSword 2
	scimitar 5
	orcSword 7
	serratedSword 10
	mercenarySword 13
	adamantineSword 16
}

list axe leveled {
	rustedHatchet 1
	hatchet 2
	battleAxe 5
	orcAxe 7
	crystalAxe 10
	dwarfAxe 13
	giantAxe 16
}

list blunt leveled {
	club 1
	mace 2
	pickaxe 4
	blacksmithHammer 4
	orcHammer 5
	barbedCudgel 7
	morningstar 10
	dwarfHammer 13
	adamantineMace 16
}

list wand leveled {
	noviceWand 1
	adeptWand 5
	expertWand 10
	masterWand 15
}

list bow leveled {
	shortBow 1
	longBow 4
	compositeBow 8
	elvenBow 12
	dragonBow 16
}

list shield leveled {
	plankShield 1
	woodenShield 3
	kiteShield 5
	ironShield 7
	steelShield 10
	mithrilShield 13
	spikedShield 14
	adamantineShield 16
}

list lightArmor leveled {
	paddedArmor 1
	paddedArmorHq 2
	paddedArmorM 4
	leatherArmor 2
	leatherArmorHq 3
	leatherArmorM 5
	studdedArmor 5
	studdedArmorHq 6
	studdedArmorM 8
	chainShirt 10
	chainShirtHq 11
	chainShirtM 13
	mithrilChainShirt 15
	dragonskinArmor 18
}

list mediumArmor leveled {
	hideArmor 1
	hideArmorHq 2
	hideArmorM 4
	trollHideArmor 8
	chainmail 2
	chainmailHq 3
	chainmailM 5
	mithrilChainmail 7
	scaleArmor 5
	scaleArmorHq 6
	scaleArmorM 8
	dragonscaleArmor 18
	breastplate 10
	breastplateHq 11
	breastplateM 13
	mithrilBreastplate 15
	adamantineBreastplate 17
}

list heavyArmor leveled {
	rustedSplitArmor 1 // this is level 2 but there is nothing worse, people needs to get something
	splintArmor 5
	splintArmorHq 6
	splintArmorM 8
	mithrilSplintArmor 10
	plateArmor 10
	plateArmorHq 11
	plateArmorM 13
	mithrilPlateArmor 15
	adamantinePlateArmor 17
	crystalArmor 15
	crystalArmorM 18
}

list mageArmor leveled {
	noviceRobe 1
	mageRobe 9
	battleMageRobe 13
}

list amulets leveled {
	amuletGourmet 9
	amuletSprinter 9
	amuletMage 12
	amuletDefense 12
	amuletStamina 12
	amuletMana 12
	amuletWarrior 15
	amuletArcher 15
	amuletAntimagic 15
	amuletHealth 18
}

list rings leveled {
	ringStrength 8
	ringEndurance 8
	ringDexterity 8
	ringIntelligence 8
	ringWisdom 8
	ringCharisma 8
	ringHealth 8
	ringStamina 8
	ringDefense 8
	ringAttack 8
	ringRangedAttack 8
	ringMage 8
	ringOneHandedWeapon 8
	ringShortBlade 8
	ringLongBlade 8
	ringAxe 8
	ringBlunt 8
	ringBow 8
	ringShield 8
	ringLightArmor 8
	ringMediumArmor 8
	ringHeavyArmor 8
	ringPersuasion 8
	ringCarry 8
	ringGodsMagic 8
	ringConcentration 8
	ringMysticMagic 8
	ringMana 8
	ringStrength2 11
	ringEndurance2 11
	ringDexterity2 11
	ringIntelligence2 11
	ringWisdom2 11
	ringCharisma2 11
	ringRegeneration 11
	ringAssassin 11
	ringPoisonResistance 11
	ringManaRegeneration 11
}

list potions {
	potionNatural
	potionNatural2
	potionHealth
	potionHealth2
	potionHealth3
	potionMana
	potionMana2
	potionMana3
	potionRegeneration
	potionAntidote
	potionAntimagic
}

list ingredients priority {
	4 healingHerb
	4 manaHerb
	3 healCrystal
	3 magicCrystal
	2 tallow
	2 trollBlood
}

list recipes {
	recipeAntidote
	recipeRegeneration
	recipeAntimagic
	recipeBookNatural
}

list artifacts {
	ancientAmulet
	ancientAmulet2
	ancientAmulet3
	ancientBrooch
	ancientFlask
	ancientArtifact
	ancientSkull
	ancientFigurine
	ancientFigurine2
	ancientFigurine3
	ancientBook
	ancientMask
	ancientMask2
	ancientBowl
	ancientCoin
	ancientRing
	ancientRing2
	ancientRing3
	ancientTalisman
	ancientTalisman2
}

//------------------------------------------------------------------------------
// STOCK SCRIPTS
//------------------------------------------------------------------------------
// merchant
stock merchant {
	// random items
	script {
		int priceLimit, count = Random(15, 20);
		if(Level::IsCity())
		{
			priceLimit = Random(2000, 2500); // city
			count += 5;
		}
		else if(Level::IsVillage())
			priceLimit = Random(500, 1000); // village
		else if(Level::IsTutorial())
			priceLimit = 500; // tutorial
		else
			priceLimit = 1000; // traveling merchant
		for(int i=0; i<count; ++i)
		{
			ITEM_TYPE type = ITEM_TYPE(Rand() % 9);
			if(type == IT_CONSUMABLE || type == IT_OTHER)
				StockScript::AddRandomItem(type, priceLimit/5, ITEM_NOT_SHOP | ITEM_NOT_MERCHANT, Random(2,5));
			else
				StockScript::AddRandomItem(type, priceLimit, ITEM_NOT_SHOP | ITEM_NOT_MERCHANT);
		}
	}
	// potions
	random 5 10 potionNatural
	random 5 10 potionHealth
}

// blacksmith - random equipment & 1 set of selected items
stock blacksmith {
	// basic equipment
	script {
		int count = Random(12, 18);
		int priceLimit;
		if(Level::IsCity())
			priceLimit = 99999;
		else
		{
			count -= Random(1, 3);
			priceLimit = Random(1250, 2500);
		}
		for(int i=0; i<count; ++i)
		{
			ITEM_TYPE type = ITEM_TYPE(Rand() % 4);
			StockScript::AddRandomItem(type, priceLimit, ITEM_NOT_SHOP | ITEM_NOT_BLACKSMITH);
		}
	}

	// short blade
	set {
		dagger
		shortSword
		rapier
		city cutlass
		city assassinDagger
	}
	// long blade
	set {
		longSword
		scimitar
		orcSword
		city serratedSword
		city mercenarySword
	}
	// axe
	set {
		hatchet
		battleAxe
		orcAxe
		city crystalAxe
		city dwarfAxe
	}
	// blunt
	set {
		mace
		orcHammer
		barbedCudgel
		city morningstar
		city dwarfHammer
	}
	// bow
	set {
		shortBow
		longBow
		compositeBow
		city elvenBow
	}
	// shield
	set {
		woodenShield
		kiteShield
		ironShield
		city steelShield
		city mithrilShield
		city spikedShield
	}
	// light armor
	set {
		city {
			chance paddedArmorM paddedArmorHq
			chance leatherArmorM leatherArmorHq
			chance studdedArmorM studdedArmorHq
			chance {
				mithrilChainShirt 1
				chainShirtM 2
				chainShirtHq 2
			}
		}
		else {
			chance paddedArmorHq paddedArmor
			chance leatherArmorHq leatherArmor
			chance studdedArmorHq studdedArmor
			chance chainShirtHq chainShirt
		}
	}
	// medium armor
	set {
		city {
			chance hideArmorM hideArmorHq
			chance {
				mithrilChainmail 1
				chainmailM 2
				chainmailHq 2
			}
			chance scaleArmorM scaleArmorHq
			chance {
				mithrilBreastplate 1
				breastplateM 2
				breastplateHq 2
			}
		}
		else {
			chance hideArmorHq hideArmor
			chance chainmailHq chainmail
			chance scaleArmorHq scaleArmor
			chance breastplateHq breastplate
		}
	}
	// heavy armor
	set {
		city {
			chance {
				mithrilSplintArmor 1
				splintArmorM 2
				splintArmorHq 2
			}
			chance plateArmorM plateArmorHq
		}
		else {
			rustedSplitArmor
			chance splintArmorHq splintArmor
			chance plateArmorHq plateArmor
		}
	}
}

// alchemist - random potions
stock alchemist {
	script {
		int priceLimit;
		int potionCount = Random(12, 18);
		int recipeCount = Random(1, 3);

		if(!Level::IsCity())
		{
			priceLimit = Random(150, 250);
			potionCount -= Random(1, 3);
			--recipeCount;
		}
		else
			priceLimit = Random(250, 350);

		// potions
		ItemList@ lis = ItemList::Get("potions");
		for(int i=0; i<potionCount; ++i)
			StockScript::AddItem(lis.GetItem(), Random(3, 6));

		// ingredients
		@lis = ItemList::Get("ingredients");
		for(int i=0; i<10; ++i)
		{
			Item@ item = lis.GetItem();
			int count = priceLimit / item.value;
			if(count > 0)
				StockScript::AddItem(item, count);
		}

		// recipes
		@lis = ItemList::Get("recipes");
		for(int i=0; i<recipeCount; ++i)
			StockScript::AddItem(lis.GetItem());
	}
	random 2 5 ladle
}

// innkeeper drinks & food
stock innkeeper {
	// random food
	script {
		int count = Random(10, 20);
		if(!Level::IsCity())
			count -= Random(1, 3);
		ItemList@ list = ItemList::Get("normalFood");
		for(int i=0; i<count; ++i)
			StockScript::AddItem(list.GetItem());
	}
	// drinks
	city {
		random 10 15 beer
		random 8 12 vodka
		random 5 10 water
		random 2 4 spirit
		random 0 2 springWater
	}
	else {
		random 5 7 beer
		random 4 6 vodka
		random 2 5 water
		random 1 2 spirit
		random 0 2 springWater
	}
}

// food seller - food & drinks and sometimes cooking items
stock foodSeller {
	script {
		ItemList@ list = ItemList::Get("foodAndDrink");
		bool isVillage = !Level::IsCity();
		for(int i=0, count=list.Size(); i<count; ++i)
		{
			int value = Random(50, 100);
			if(isVillage)
				value /= 2;
			Item@ item = list.GetItem(i);
			int add = value / item.value;
			if(add > 0)
				StockScript::AddItem(item, add);
		}
		if(Rand() % 4 == 0)
			StockScript::AddItem(Item::Get("fryingPan"));
		if(Rand() % 4 == 0)
			StockScript::AddItem(Item::Get("ladle"));
	}
}

stock orcBlacksmith {
	random 1 3 orcSword
	random 1 3 orcAxe
	random 1 3 orcHammer
	shamanOrcHammer
	longBow
	ironShield
	steelShield
	random 1 2 orcLeatherArmor
	random 1 2 orcChainmail
	orcShamanArmor
}

stock alchemistApprentice {
	8 potionHealth
	3 potionHealth2
	5 potionNatural
	ladle
}

stock mageSeller {
	random 2 4 amulets
	random 6 8 rings
	random 1 2 magicScroll
	random 2 3 wand
	random 2 3 mageArmor
}

stock innOnTable {
	script {
		if(Rand() % 2 == 0)
		{
			Item@ beer = Item::Get("beer");
			StockScript::AddItem(beer);
			if(Rand() % 4 == 0)
				StockScript::AddItem(beer);
		}
		if(Rand() % 3 == 0)
			StockScript::AddItem(Item::Get("plate"));
		if(Rand() % 3 == 0)
			StockScript::AddItem(Item::Get("cup"));
	}
}

stock innOnShelve {
	random 3 5 beer
	random 1 3 vodka
}

stock foodsellerShelve {
	20 foodAndDrink
}

stock alchemistShelve {
	script {
		Item@ potionHealth = Item::Get("potionHealth");
		StockScript::AddItem(potionHealth);
		if(Rand() % 2 == 0)
			StockScript::AddItem(potionHealth);
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("potionNatural"));
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("healingHerb"));
		if(Rand() % 2 == 0)
			StockScript::AddItem(Item::Get("potionMana"));
	}
}

//------------------------------------------------------------------------------
// START ITEMS
//------------------------------------------------------------------------------
startItems {
	shortBlade {
		0 knife
		10 dagger
		20 shortSword
		30 rapier
		* cutlass
	}
	longBlade {
		0 woodenSword
		10 longSword
		20 scimitar
		30 orcSword
		* serratedSword
	}
	axe {
		0 rustedHatchet
		10 hatchet
		20 battleAxe
		30 orcAxe
		* crystalAxe
	}
	blunt {
		0 club
		10 mace
		20 orcHammer
		30 barbedCudgel
		* morningstar
	}
	bow {
		5 shortBow
		20 longBow
		30 compositeBow
		* elvenBow
	}
	shield {
		5 plankShield
		10 woodenShield
		20 kiteShield
		30 ironShield
		* steelShield
	}
	lightArmor {
		0 paddedArmor
		10 paddedArmorHq
		15 leatherArmorHq
		20 studdedArmor
		30 studdedArmorHq
		* chainShirt
		mage 0 clothes
		mage 10 noviceRobe
		mage 25 mageRobe
		mage * battleMageRobe
	}
	mediumArmor {
		0 hideArmor
		10 chainmail
		15 chainmailHq
		20 scaleArmor
		30 scaleArmorHq
		* breastplate
	}
	heavyArmor {
		0 rustedSplitArmor
		20 splintArmor
		30 splintArmorHq
		* plateArmor
	}
	mysticMagic {
		0 noviceWand
		25 adeptWand
		* expertWand
	}
	godsMagic {
		* amuletMana
	}
}

//------------------------------------------------------------------------------
// BETTER ITEMS
// This is for ai buying better items for gold, shouldn't contain unique items
//------------------------------------------------------------------------------
betterItems {
	knife dagger
	dagger shortSword
	shortSword rapier
	rapier cutlass
	cutlass assassinDagger
	assassinDagger shortAdamantineSword
	
	woodenSword longSword
	longSword scimitar
	scimitar orcSword
	orcSword serratedSword
	serratedSword mercenarySword
	mercenarySword adamantineSword
	
	rustedHatchet hatchet
	hatchet battleAxe
	battleAxe orcAxe
	orcAxe crystalAxe
	crystalAxe giantAxe
	
	club mace
	mace orcHammer
	orcHammer barbedCudgel
	barbedCudgel morningstar
	morningstar dwarfHammer
	dwarfHammer adamantineMace
	ogreClub adamantineMace
	blacksmithHammer orcHammer
	pickaxe orcHammer
	fryingPan orcHammer
	
	noviceWand adeptWand
	adeptWand expertWand
	expertWand masterWand

	shortBow longBow
	longBow compositeBow
	compositeBow elvenBow
	elvenBow dragonBow

	plankShield woodenShield
	woodenShield kiteShield
	kiteShield ironShield
	ironShield steelShield
	steelShield mithrilShield
	mithrilShield spikedShield
	spikedShield adamantineShield

	paddedArmor leatherArmor
	paddedArmorHq leatherArmor
	paddedArmorM chainShirt
	leatherArmor studdedArmor
	leatherArmorHq studdedArmor
	leatherArmorM chainShirt
	studdedArmor chainShirt
	studdedArmorHq chainShirt
	studdedArmorM chainShirtHq
	chainShirt chainShirtHq
	chainShirtHq chainShirtM
	chainShirtM dragonskinArmor
	mithrilChainShirt dragonskinArmor

	hideArmor chainmail
	hideArmorHq chainmail
	hideArmorM breastplate
	trollHideArmor breastplateM
	chainmail scaleArmor
	chainmailHq scaleArmor
	chainmailM breastplateHq
	mithrilChainmail breastplateHq
	scaleArmor breastplate
	scaleArmorHq breastplate
	scaleArmorM breastplateM
	breastplate breastplateHq
	breastplateHq breastplateM
	breastplateM adamantineBreastplate
	mithrilBreastplate adamantineBreastplate
	adamantineBreastplate dragonscaleArmor

	rustedSplitArmor splintArmor
	splintArmor splintArmorHq
	splintArmorHq splintArmorM
	splintArmorM plateArmor
	mithrilSplintArmor plateArmor
	plateArmor crystalArmor
	plateArmorHq crystalArmor
	plateArmorM crystalArmor
	mithrilPlateArmor crystalArmor
	crystalArmor adamantinePlateArmor
	crystalArmorM adamantinePlateArmor

	blacksmithClothes studdedArmor
	innkeeperClothes leatherArmor
	noviceRobe mageRobe
	mageRobe battleMageRobe
	necromancerRobe chainShirt
	clothes leatherArmor
	clothes2 leatherArmor
	clothes2b leatherArmor
	clothes3 leatherArmor
	clothes3b leatherArmor
	oldRobe leatherArmor
}

//------------------------------------------------------------------------------
// RECIPES
//------------------------------------------------------------------------------
recipe potionHealth {
	result potionHealth
	ingredients {
		healingHerb
	}
	skill 1
	autolearn 1
	order 0
}

recipe potionHealth2 {
	result potionHealth2
	ingredients {
		healCrystal
		healingHerb
	}
	skill 25
	autolearn 1
	order 1
}

recipe potionHealth3 {
	result potionHealth3
	ingredients {
		2 healCrystal
	}
	skill 50
	autolearn 1
	order 2
}

recipe potionMana {
	result potionMana
	ingredients {
		manaHerb
	}
	skill 1
	autolearn 1
	order 3
}

recipe potionMana2 {
	result potionMana2
	ingredients {
		magicCrystal
		manaHerb
	}
	skill 25
	autolearn 1
	order 4
}

recipe potionMana3 {
	result potionMana3
	ingredients {
		2 magicCrystal
	}
	skill 50
	autolearn 1
	order 5
}

recipe potionNatural {
	result potionNatural
	ingredients {
		tallow
		healingHerb
	}
	skill 1
	order 6
}

recipe potionNatural2 {
	result potionNatural2
	ingredients {
		2 tallow
		healingHerb
	}
	skill 25
	order 7
}

recipe potionAntidote {
	result potionAntidote
	ingredients {
		healingHerb
		manaHerb
	}
	skill 1
	order 8
}

recipe potionRegeneration {
	result potionRegeneration
	ingredients {
		trollBlood
		healingHerb
	}
	skill 25
	order 9
}

recipe potionAntimagic {
	result potionAntimagic
	ingredients {
		2 magicCrystal
		healCrystal
	}
	skill 50
	order 10
}

//------------------------------------------------------------------------------
// ALIASES (new id, old id)
//------------------------------------------------------------------------------
// renamed in V_0_13
alias noviceWand wand_1
alias adeptWand wand_2
alias expertWand wand_3
// renamed in V_0_17
alias ringPersuasion r_haggle
// renamed in V_DEV
alias knife dagger_knife
alias dagger dagger_short
alias shortSword dagger_sword
alias rapier dagger_rapier
alias cutlass dagger_cutlass
alias assassinDagger dagger_assassin
alias shortAdamantineSword dagger_sword_a
alias spinesheathDagger dagger_spinesheath
alias woodenSword sword_wooden
alias longSword sword_long
alias scimitar sword_scimitar
alias orcSword sword_orcish
alias serratedSword sword_serrated
alias mercenarySword sword_mercenary
alias adamantineSword sword_adamantine
alias semurScimitar sword_semur
alias forbiddenSword sword_forbidden
alias rustedHatchet axe_rusted
alias hatchet axe_small
alias battleAxe axe_battle
alias orcAxe axe_orcish
alias crystalAxe axe_crystal
alias dwarfAxe axe_dwarf
alias giantAxe axe_giant
alias ripperAxe axe_ripper
alias club blunt_club
alias mace blunt_mace
alias orcHammer blunt_orcish
alias shamanOrcHammer blunt_orcish_shaman
alias barbedCudgel blunt_barbed
alias morningstar blunt_morningstar
alias dwarfHammer blunt_dwarven
alias ogreClub blunt_ogre
alias adamantineMace blunt_adamantine
alias skullsmasherMace blunt_skullsmasher
alias blacksmithHammer blacksmith_hammer
alias fryingPan frying_pan
alias noviceWand wand_novice
alias adeptWand wand_adept
alias expertWand wand_expert
alias masterWand wand_master
alias shortBow bow_short
alias longBow bow_long
alias compositeBow bow_composite
alias elvenBow bow_elven
alias dragonBow bow_dragonbone
alias angelBow bow_angel
alias qGoblinsBow q_gobliny_luk
alias plankShield shield_plank
alias woodenShield shield_wood
alias kiteShield shield_kite
alias ironShield shield_iron
alias steelShield shield_steel
alias mithrilShield shield_mithril
alias spikedShield shield_spiked
alias adamantineShield shield_adamantine
alias wallShield shield_wall
alias deathShield shield_death
alias paddedArmor al_padded
alias paddedArmorHq al_padded_hq
alias paddedArmorM al_padded_m
alias leatherArmor al_leather
alias leatherArmorHq al_leather_hq
alias leatherArmorM al_leather_m
alias studdedArmor al_studded
alias studdedArmorHq al_studded_hq
alias studdedArmorM al_studded_m
alias dragonskinArmor al_dragonskin
alias shadowArmor al_shadow
alias chainShirt al_chain_shirt
alias chainShirtHq al_chain_shirt_hq
alias chainShirtM al_chain_shirt_m
alias mithrilChainShirt al_chain_shirt_mith
alias angelskinArmor al_angelskin
alias hideArmor am_hide
alias hideArmorHq am_hide_hq
alias hideArmorM am_hide_m
alias trollHideArmor am_troll_hide
alias chainmail am_chainmail
alias chainmailHq am_chainmail_hq
alias chainmailM am_chainmail_m
alias mithrilChainmail am_chainmail_mith
alias scaleArmor am_scale
alias scaleArmorHq am_scale_hq
alias scaleArmorM am_scale_m
alias dragonscaleArmor am_dragonscale
alias breastplate am_breastplate
alias breastplateHq am_breastplate_hq
alias breastplateM am_breastplate_m
alias mithrilBreastplate am_breastplate_mith
alias adamantineBreastplate am_breastplate_adam
alias gladiatorArmor am_gladiator
alias rustedSplitArmor ah_splint_rusted
alias splintArmor ah_splint
alias splintArmorHq ah_splint_hq
alias splintArmorM ah_splint_m
alias mithrilSplintArmor ah_splint_mith
alias antimageArmor ah_antimage
alias plateArmor ah_plate
alias plateArmorHq ah_plate_hq
alias plateArmorM ah_plate_m
alias mithrilPlateArmor ah_plate_mith
alias adamantinePlateArmor ah_plate_adam
alias blackArmor ah_black_armor
alias crystalArmor ah_crystal
alias crystalArmorM ah_crystal_m
alias bloodCrystalArmor ah_blood_crystal
alias blacksmithClothes al_blacksmith
alias innkeeperClothes al_innkeeper
alias clothes al_clothes
alias clothes2 al_clothes2
alias clothes2b al_clothes2b
alias clothes3 al_clothes3
alias clothes3b al_clothes3b
alias oldRobe al_old_robe
alias goblinArmor al_goblin
alias orcLeatherArmor al_orc
alias orcShamanArmor al_orc_shaman
alias orcChainmail am_orc
alias noviceRobe al_mage
alias mageRobe al_mage2
alias battleMageRobe al_mage3
alias archmageRobe al_mage4
alias necromancerRobe al_necromancer
alias amuletSilver a_silver
alias amuletGold a_gold
alias amuletRuby a_ruby
alias amuletDiamond a_diamond
alias amuletGourmet a_food
alias amuletSprinter a_sprinter
alias amuletMage a_mage
alias amuletDefense a_defense
alias amuletStamina a_stamina
alias amuletMana a_mana
alias amuletWarrior a_warrior
alias amuletArcher a_archer
alias amuletAntimagic a_antimagic
alias amuletHealth a_health
alias ringSilver r_silver
alias ringGold r_gold
alias ringEmerald r_emerald
alias ringStrength r_str
alias ringEndurance r_end
alias ringDexterity r_dex
alias ringIntelligence r_int
alias ringWisdom r_wis
alias ringCharisma r_cha
alias ringHealth r_hp
alias ringStamina r_stamina
alias ringDefense r_def
alias ringAttack r_attack
alias ringRangedAttack r_ranged_attack
alias ringMage r_mage
alias ringOneHandedWeapon r_one_handed_weapon
alias ringShortBlade r_short_blade
alias ringLongBlade r_long_blade
alias ringAxe r_axe
alias ringBlunt r_blunt
alias ringBow r_bow
alias ringShield r_shield
alias ringLightArmor r_light_armor
alias ringMediumArmor r_medium_armor
alias ringHeavyArmor r_heavy_armor
alias ringPersuasion r_persuasion
alias ringCarry r_carry
alias ringGodsMagic r_gods_magic
alias ringConcentration r_concentration
alias ringMysticMagic r_mystic_magic
alias ringMana r_mana
alias ringStrength2 r_str2
alias ringEndurance2 r_end2
alias ringDexterity2 r_dex2
alias ringIntelligence2 r_int2
alias ringWisdom2 r_wis2
alias ringCharisma2 r_cha2
alias ringRegeneration r_regeneration
alias ringAssassin r_assassin
alias ringPoisonResistance r_poison_resistance
alias ringManaRegeneration r_mana_regen
alias potionNatural p_nreg
alias potionNatural2 p_nreg2
alias potionHealth p_hp
alias potionHealth2 p_hp2
alias potionHealth3 p_hp3
alias potionMana p_mp
alias potionMana2 p_mp2
alias potionMana3 p_mp3
alias potionRegeneration p_reg
alias potionAntidote p_antidote
alias potionStrength p_str
alias potionEndurance p_end
alias potionDexterity p_dex
alias qMagesPotion q_magowie_potion
alias potionAntimagic p_antimagic
alias springWater spring_water
alias rawMeat raw_meat
alias fishMeat fish_meat
alias healingHerb healing_herb
alias manaHerb mana_herb
alias greenHerb green_herb
alias alchemistHerb alchemist_herb
alias goldenBar golden_bar
alias goldenCup golden_cup
alias wolfPelt wolf_pelt
alias worgPelt worg_pelt
alias direWolfPelt dire_wolf_pelt
alias bearPelt bear_pelt
alias blackBearPelt black_bear_pelt
alias healCrystal heal_crystal
alias magicCrystal magic_crystal
alias trollBlood troll_blood
alias ancientAmulet a_amulet
alias ancientAmulet2 a_amulet2
alias ancientAmulet3 a_amulet3
alias ancientBrooch a_brosza
alias ancientFlask a_butelka
alias ancientArtifact a_cos
alias ancientSkull a_czaszka
alias ancientFigurine a_figurka
alias ancientFigurine2 a_figurka2
alias ancientFigurine3 a_figurka3
alias ancientBook a_ksiega
alias ancientMask a_maska
alias ancientMask2 a_maska2
alias ancientBowl a_misa
alias ancientCoin a_moneta
alias ancientRing a_pierscien
alias ancientRing2 a_pierscien2
alias ancientRing3 a_pierscien3
alias ancientTalisman a_talizman
alias ancientTalisman2 a_talizman2
alias qMineKey key_kopalnia
alias qBanditsParcel q_bandyci_paczka
alias qBanditsLetter q_bandyci_list
alias qMagesBall q_magowie_kula
alias qMagesBall2 q_magowie_kula2
alias qOrcsKey q_orkowie_klucz
alias qCraziesStone q_szaleni_kamien
alias qSecretNote sekret_kartka
alias qSecretNote2 sekret_kartka2
alias wantedPoster wanted_letter
alias qResources q_resources
alias qInfectedOrgan q_infected_organ
alias qYellowCrystal q_yellow_crystal
alias qYellowHerbs q_yellow_herbs
alias bookHistory book_history
alias bookOrcs book_orcs
alias bookUndead book_undead
alias bookBehindTheWall book_behind_the_wall
alias bookAdventurer book_adventurer
alias bookLucidDream book_ld
alias bookRunic book_runic
alias qEvilBook q_zlo_ksiega
alias magicScroll magic_scroll
alias qClericBook book_q_cleric
alias qSoltysJournal book_q_journal
alias cryptNote crypt_note
alias recipeAntidote recipe_antidote
alias recipeRegeneration recipe_reg
alias recipeAntimagic recipe_antimagic
alias recipeBookNatural recipe_book_nreg
recipeAlias potionNatural p_nreg
recipeAlias potionNatural2 p_nreg2
recipeAlias potionHealth p_hp
recipeAlias potionHealth2 p_hp2
recipeAlias potionHealth3 p_hp3
recipeAlias potionMana p_mp
recipeAlias potionMana2 p_mp2
recipeAlias potionMana3 p_mp3
recipeAlias potionRegeneration p_reg
recipeAlias potionAntidote p_antidote
recipeAlias potionAntimagic p_antimagic
